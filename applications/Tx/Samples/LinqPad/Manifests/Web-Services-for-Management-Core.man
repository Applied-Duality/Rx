<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<assembly
    xmlns="urn:schemas-microsoft-com:asm.v3"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    manifestVersion="1.0"
    >
  <assemblyIdentity
      buildType="$(build.buildType)"
      language="neutral"
      name="Microsoft-Windows-Web-Services-for-Management-Core"
      processorArchitecture="$(build.arch)"
      publicKeyToken="$(Build.WindowsPublicKeyToken)"
      version="$(build.version)"
      versionScope="nonSxS"
      />
  <dependency
      discoverable="false"
      optional="false"
      resourceType="Resources"
      >
    <dependentAssembly dependencyType="prerequisite">
      <assemblyIdentity
          buildType="$(build.buildType)"
          language="*"
          name="Microsoft-Windows-Web-Services-for-Management-Core.Resources"
          processorArchitecture="$(build.processorArchitecture)"
          publicKeyToken="$(Build.WindowsPublicKeyToken)"
          version="$(build.version)"
          versionScope="nonSxS"
          />
    </dependentAssembly>
  </dependency>
  <dependency
      discoverable="false"
      offlineInstall="true"
      optional="false"
      resourceType=""
      >
    <dependentAssembly dependencyType="prerequisite">
      <assemblyIdentity
          buildType="$(build.buildType)"
          language="*"
          name="Microsoft-Windows-WMIV2-miutils-dll"
          processorArchitecture="$(build.arch)"
          publicKeyToken="$(Build.WindowsPublicKeyToken)"
          version="$(build.version)"
          />
    </dependentAssembly>
  </dependency>
  <dependency
      discoverable="false"
      offlineInstall="true"
      optional="false"
      resourceType=""
      >
    <dependentAssembly dependencyType="prerequisite">
      <assemblyIdentity
          buildType="$(build.buildType)"
          language="*"
          name="Microsoft-Windows-WMIV2-wmidcom-dll"
          processorArchitecture="$(build.arch)"
          publicKeyToken="$(Build.WindowsPublicKeyToken)"
          version="$(build.version)"
          />
    </dependentAssembly>
  </dependency>
  <file
      destinationPath="$(runtime.wbem)\"
      importPath="$(build.nttree)\"
      name="WsmAuto.mof"
      sourceName="WsmAuto.mof"
      sourcePath=".\"
      />
  <file
      destinationPath="$(runtime.system32)"
      importPath="$(build.nttree)\"
      name="WsmPty.xsl"
      sourceName="WsmPty.xsl"
      sourcePath=".\"
      />
  <file
      destinationPath="$(runtime.system32)"
      importPath="$(build.nttree)\"
      name="WsmTxt.xsl"
      sourceName="WsmTxt.xsl"
      sourcePath=".\"
      />
  <file
      destinationPath="$(runtime.system32)"
      importPath="$(build.nttree)\"
      name="wsmanconfig_schema.xml"
      sourceName="wsmanconfig_schema.xml"
      sourcePath=".\"
      />
  <file
      destinationPath="$(runtime.system32)"
      importPath="$(build.nttree)\"
      name="winrm.vbs"
      sourceName="winrm.vbs"
      sourcePath=".\"
      />
  <file
      destinationPath="$(runtime.system32)"
      importPath="$(build.nttree)\"
      name="WsmAuto.dll"
      sourceName="WsmAuto.dll"
      sourcePath=".\"
      />
  <file
      destinationPath="$(runtime.system32)"
      importPath="$(build.nttree)\"
      name="WsmSvc.dll"
      sourceName="WsmSvc.dll"
      sourcePath=".\"
      />
  <file
      destinationPath="$(runtime.system32)"
      importPath="$(build.nttree)\"
      name="WsmWmiPl.dll"
      sourceName="WsmWmiPl.dll"
      sourcePath=".\"
      />
  <file
      destinationPath="$(runtime.system32)"
      importPath="$(build.nttree)\"
      name="WsmRes.dll"
      sourceName="WsmRes.dll"
      sourcePath=".\"
      />
  <file
      destinationPath="$(runtime.system32)"
      importPath="$(build.nttree)\"
      name="WSManHTTPConfig.exe"
      sourceName="WSManHTTPConfig.exe"
      sourcePath=".\"
      />
  <file
      destinationPath="$(runtime.system32)"
      importPath="$(build.nttree)\"
      name="WSManMigrationPlugin.dll"
      sourceName="WSManMigrationPlugin.dll"
      sourcePath=".\"
      />
  <file
      destinationPath="$(runtime.system32)"
      importPath="$(build.nttree)\"
      name="winrm.cmd"
      sourceName="winrm.cmd"
      sourcePath=".\"
      />
  <file
      destinationPath="$(runtime.system32)"
      importPath="$(build.nttree)\"
      name="wsmplpxy.dll"
      sourceName="wsmplpxy.dll"
      sourcePath=".\"
      />
  <file
      destinationPath="$(runtime.system32)"
      importPath="$(build.nttree)\"
      name="wsmprovhost.exe"
      sourceName="wsmprovhost.exe"
      sourcePath=".\"
      />
  <memberships>
    <categoryMembership buildFilter="not build.arch = wow64">
      <id
          name="Microsoft.Windows.Categories.Services"
          publicKeyToken="$(build.WindowsPublicKeyToken)"
          typeName="Service"
          version="$(build.version)"
          />
      <categoryInstance>
        <serviceData
            dependOnService="RPCSS,HTTP"
            description="@%Systemroot%\system32\wsmsvc.dll,-102"
            displayName="@%Systemroot%\system32\wsmsvc.dll,-101"
            errorControl="normal"
            imagePath="%SystemRoot%\System32\svchost.exe -k netsvcs"
            name="WinRM"
            objectName="LocalSystem"
            requiredPrivileges="SeAssignPrimaryTokenPrivilege,SeAuditPrivilege,SeChangeNotifyPrivilege,SeCreateGlobalPrivilege,SeImpersonatePrivilege"
            sidType="unrestricted"
            start="delayedAuto"
            startAfterInstall="none"
            type="win32ShareProcess"
            >
          <failureActions resetPeriod="86400">
            <actions>
              <action
                  delay="120000"
                  type="restartService"
                  />
              <action
                  delay="300000"
                  type="restartService"
                  />
              <action type="none"/>
            </actions>
          </failureActions>
        </serviceData>
      </categoryInstance>
    </categoryMembership>
    <categoryMembership>
      <id
          name="Microsoft.Windows.Categories"
          publicKeyToken="365143bb27e7ac8b"
          typeName="SvcHost"
          version="1.0.0.0"
          />
      <categoryInstance subcategory="netsvcs">
        <serviceGroup
            position="last"
            serviceName="WinRM"
            />
      </categoryInstance>
    </categoryMembership>
  </memberships>
  <registryKeys>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\WSMAN">
      <registryValue
          name="StackVersion"
          value="2.0"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WSMAN_CLIENT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\WSMAN\Client">
      <securityDescriptor name="WSMAN_CLIENT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\WSMAN\Listener">
      <securityDescriptor name="WSMAN_LISTENER_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\WSMAN\Plugin">
      <securityDescriptor name="WSMAN_LISTENER_SDDL"/>
    </registryKey>
    <registryKey
        buildFilter="not build.arch = wow64"
        keyName="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\WSMAN\AutoRestartList"
        >
      <securityDescriptor name="WSMAN_LISTENER_SDDL"/>
    </registryKey>
    <registryKey
        buildFilter="not build.arch = wow64"
        keyName="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\WSMAN\Plugin\Event Forwarding Plugin"
        >
      <registryValue
          name="ConfigXML"
          value="&lt;PlugInConfiguration xmlns=&quot;http://schemas.microsoft.com/wbem/wsman/1/config/PluginConfiguration&quot; Name=&quot;Event Forwarding Plugin&quot; Filename=&quot;%systemroot%\system32\wevtfwd.dll&quot; SDKVersion=&quot;1&quot; XmlRenderingType=&quot;text&quot; SharedHost=&quot;false&quot; HostIdleTimeoutSeconds=&quot;0&quot; RunAsUser=&quot;&quot; RunAsPassword=&quot;&quot; AutoRestart=&quot;false&quot; Enabled=&quot;true&quot; ServerBufferingMode=&quot;Block&quot; &gt;&lt;Resources&gt;&lt;Resource ResourceUri=&quot;http://schemas.microsoft.com/wbem/wsman/1/windows/EventLog&quot; SupportsOptions=&quot;true&quot; &gt;&lt;Security Uri=&quot;&quot; ExactMatch=&quot;false&quot; Sddl=&quot;O:NSG:BAD:P(A;;GA;;;BA)(A;;GR;;;ER)S:P(AU;FA;GA;;;WD)(AU;SA;GWGX;;;WD)&quot; /&gt;&lt;Capability Type=&quot;Subscribe&quot; SupportsFiltering=&quot;true&quot; /&gt;&lt;/Resource&gt;&lt;/Resources&gt;&lt;Quotas MaxIdleAndRetryTimeoutms=&quot;3600000&quot; MaxConcurrentUsers=&quot;100&quot; MaxConcurrentOperationsPerUser=&quot;15&quot; MaxConcurrentOperations=&quot;1500&quot;/&gt;&lt;/PlugInConfiguration&gt;"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WSMAN_LISTENER_SDDL"/>
    </registryKey>
    <registryKey
        buildFilter="not build.arch = wow64"
        keyName="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\WSMAN\Plugin\WMI Provider"
        >
      <registryValue
          name="ConfigXML"
          value="&lt;PlugInConfiguration xmlns=&quot;http://schemas.microsoft.com/wbem/wsman/1/config/PluginConfiguration&quot; Name=&quot;WMI Provider&quot; Filename=&quot;%systemroot%\system32\WsmWmiPl.dll&quot; SDKVersion=&quot;1&quot; XmlRenderingType=&quot;text&quot; SharedHost=&quot;false&quot; HostIdleTimeoutSeconds=&quot;0&quot; RunAsUser=&quot;&quot; RunAsPassword=&quot;&quot; AutoRestart=&quot;false&quot; Enabled=&quot;true&quot; ServerBufferingMode=&quot;Block&quot; &gt;&lt;Resources&gt;&lt;Resource ResourceUri=&quot;http://schemas.microsoft.com/wbem/wsman/1/wmi&quot; SupportsOptions=&quot;true&quot; &gt;&lt;Security Uri=&quot;&quot; ExactMatch=&quot;false&quot; Sddl=&quot;O:NSG:BAD:P(A;;GA;;;AU)&quot; /&gt;&lt;Capability Type=&quot;Get&quot; SupportsFragment=&quot;true&quot; /&gt;&lt;Capability Type=&quot;Put&quot; SupportsFragment=&quot;true&quot; /&gt;&lt;Capability Type=&quot;Invoke&quot; /&gt;&lt;Capability Type=&quot;Create&quot; /&gt;&lt;Capability Type=&quot;Delete&quot; /&gt;&lt;Capability Type=&quot;Enumerate&quot; SupportsFiltering=&quot;true&quot;/&gt;&lt;Capability Type=&quot;Subscribe&quot; SupportsFiltering=&quot;true&quot;/&gt;&lt;/Resource&gt;&lt;Resource ResourceUri=&quot;http://schemas.dmtf.org/wbem/wscim/1/cim-schema&quot; SupportsOptions=&quot;true&quot; &gt;&lt;Security Uri=&quot;&quot; ExactMatch=&quot;false&quot; Sddl=&quot;O:NSG:BAD:P(A;;GA;;;AU)&quot; /&gt;&lt;Capability Type=&quot;Get&quot; SupportsFragment=&quot;true&quot; /&gt;&lt;Capability Type=&quot;Put&quot; SupportsFragment=&quot;true&quot; /&gt;&lt;Capability Type=&quot;Invoke&quot; /&gt;&lt;Capability Type=&quot;Create&quot; /&gt;&lt;Capability Type=&quot;Delete&quot; /&gt;&lt;Capability Type=&quot;Enumerate&quot;/&gt;&lt;Capability Type=&quot;Subscribe&quot; SupportsFiltering=&quot;true&quot;/&gt;&lt;/Resource&gt;&lt;Resource ResourceUri=&quot;http://schemas.dmtf.org/wbem/wscim/1/*&quot; SupportsOptions=&quot;true&quot; ExactMatch=&quot;true&quot; &gt;&lt;Security Uri=&quot;&quot; ExactMatch=&quot;false&quot; Sddl=&quot;O:NSG:BAD:P(A;;GA;;;AU)&quot; /&gt;&lt;Capability Type=&quot;Enumerate&quot; SupportsFiltering=&quot;true&quot;/&gt;&lt;Capability Type=&quot;Subscribe&quot;SupportsFiltering=&quot;true&quot;/&gt;&lt;/Resource&gt;&lt;/Resources&gt;&lt;Quotas MaxIdleAndRetryTimeoutms=&quot;3600000&quot; MaxConcurrentUsers=&quot;100&quot; MaxConcurrentOperationsPerUser=&quot;15&quot; MaxConcurrentOperations=&quot;1500&quot;/&gt;&lt;/PlugInConfiguration&gt;"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WSMAN_LISTENER_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\WSMAN\CertMapping">
      <securityDescriptor name="WSMAN_LISTENER_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\WSMAN\Service">
      <securityDescriptor name="WSMAN_SERVICE_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\WSMAN\WinRS">
      <securityDescriptor name="WSMAN_CUSTOMREMOTESHELL_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\WSMAN\WinRS\CustomRemoteShell">
      <securityDescriptor name="WSMAN_CUSTOMREMOTESHELL_SDDL"/>
    </registryKey>
    <!-- This is a temporary fix till the NETSH AI is activated in Windows 8 M2 -->
    <registryKey
        buildFilter="not build.arch = wow64"
        keyName="HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\HTTP\Parameters\UrlAclInfo"
        >
      <registryValue
          name="http://+:47001/wsman/"
          value="010004800000000000000000000000001400000002005800020000000000280000000020010600000000000550000000862AEE21D75B09B0A45B6CADBB83934DEA679018000028000000002001060000000000055000000043B4FAF1D3D45434A8D53E4A530A6C1F3DEE9BB2"
          valueType="REG_BINARY"
          />
      <registryValue
          name="http://+:5985/wsman/"
          value="010004800000000000000000000000001400000002005800020000000000280000000020010600000000000550000000862AEE21D75B09B0A45B6CADBB83934DEA679018000028000000002001060000000000055000000043B4FAF1D3D45434A8D53E4A530A6C1F3DEE9BB2"
          valueType="REG_BINARY"
          />
      <registryValue
          name="https://+:5986/wsman/"
          value="010004800000000000000000000000001400000002005800020000000000280000000020010600000000000550000000862AEE21D75B09B0A45B6CADBB83934DEA679018000028000000002001060000000000055000000043B4FAF1D3D45434A8D53E4A530A6C1F3DEE9BB2"
          valueType="REG_BINARY"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\CLSID\{BCED617B-EC03-420b-8508-977DC7A686BD}">
      <registryValue
          value="WSMan Automation Class"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\CLSID\{BCED617B-EC03-420b-8508-977DC7A686BD}\InprocServer32">
      <registryValue
          value="$(runtime.system32)\WSMAUTO.DLL"
          valueType="REG_SZ"
          />
      <registryValue
          name="ThreadingModel"
          value="Both"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\CLSID\{BCED617B-EC03-420b-8508-977DC7A686BD}\ProgID">
      <registryValue
          value="WSMan.Automation.1"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\CLSID\{BCED617B-EC03-420b-8508-977DC7A686BD}\Programmable"/>
    <registryKey keyName="HKEY_CLASSES_ROOT\CLSID\{BCED617B-EC03-420b-8508-977DC7A686BD}\Typelib">
      <registryValue
          value="{F010BE25-296D-4036-980F-5A0669A17577}"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\CLSID\{BCED617B-EC03-420b-8508-977DC7A686BD}\VersionIndependentProgID">
      <registryValue
          value="WSMan.Automation"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\CLSID\{7DE087A5-5DCB-4df7-BB12-0924AD8FBD9A}">
      <registryValue
          value="WSMan InternalAutomation Class"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\CLSID\{7DE087A5-5DCB-4df7-BB12-0924AD8FBD9A}\InprocServer32">
      <registryValue
          value="$(runtime.system32)\WSMAUTO.DLL"
          valueType="REG_SZ"
          />
      <registryValue
          name="ThreadingModel"
          value="Both"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\CLSID\{7DE087A5-5DCB-4df7-BB12-0924AD8FBD9A}\ProgID">
      <registryValue
          value="WSMan.InternalAutomation.1"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\CLSID\{7DE087A5-5DCB-4df7-BB12-0924AD8FBD9A}\Programmable"/>
    <registryKey keyName="HKEY_CLASSES_ROOT\CLSID\{7DE087A5-5DCB-4df7-BB12-0924AD8FBD9A}\Typelib">
      <registryValue
          value="{F010BE25-296D-4036-980F-5A0669A17577}"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\CLSID\{7DE087A5-5DCB-4df7-BB12-0924AD8FBD9A}\VersionIndependentProgID">
      <registryValue
          value="WSMan.InternalAutomation"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey
        buildFilter="not build.arch = wow64"
        keyName="HKEY_CLASSES_ROOT\Typelib\{F010BE25-296D-4036-980F-5A0669A17577}"
        >
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey
        buildFilter="not build.arch = wow64"
        keyName="HKEY_CLASSES_ROOT\Typelib\{F010BE25-296D-4036-980F-5A0669A17577}\1.0"
        >
      <registryValue
          value="Microsoft WSMAN Automation V1.0 Library"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey
        buildFilter="not build.arch = wow64"
        keyName="HKEY_CLASSES_ROOT\Typelib\{F010BE25-296D-4036-980F-5A0669A17577}\1.0\0"
        />
    <registryKey keyName="HKEY_CLASSES_ROOT\Typelib\{F010BE25-296D-4036-980F-5A0669A17577}\1.0\0\$(build.winPlatform)\">
      <registryValue
          value="$(runtime.system32)\WsmAuto.dll"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey
        buildFilter="not build.arch = wow64"
        keyName="HKEY_CLASSES_ROOT\Typelib\{F010BE25-296D-4036-980F-5A0669A17577}\1.0\FLAGS"
        >
      <registryValue
          value="0"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey
        buildFilter="not build.arch = wow64"
        keyName="HKEY_CLASSES_ROOT\Typelib\{F010BE25-296D-4036-980F-5A0669A17577}\1.0\HELPDIR"
        >
      <registryValue
          value="%systemroot%\system32\"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{190D8637-5CD3-496D-AD24-69636BB5A3B5}">
      <registryValue
          value="IWSMan"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{190D8637-5CD3-496D-AD24-69636BB5A3B5}\ProxyStubClsid32">
      <registryValue
          value="{00020424-0000-0000-C000-000000000046}"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{190D8637-5CD3-496D-AD24-69636BB5A3B5}\TypeLib">
      <registryValue
          value="{F010BE25-296D-4036-980F-5A0669A17577}"
          valueType="REG_SZ"
          />
      <registryValue
          name="Version"
          value="1.0"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{2D53BDAA-798E-49E6-A1AA-74D01256F411}">
      <registryValue
          value="IWSManEx"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{2D53BDAA-798E-49E6-A1AA-74D01256F411}\ProxyStubClsid32">
      <registryValue
          value="{00020424-0000-0000-C000-000000000046}"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{2D53BDAA-798E-49E6-A1AA-74D01256F411}\TypeLib">
      <registryValue
          value="{F010BE25-296D-4036-980F-5A0669A17577}"
          valueType="REG_SZ"
          />
      <registryValue
          name="Version"
          value="1.0"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{F704E861-9E52-464F-B786-DA5EB2320FDD}">
      <registryValue
          value="IWSManConnectionOptions"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{F704E861-9E52-464F-B786-DA5EB2320FDD}\ProxyStubClsid32">
      <registryValue
          value="{00020424-0000-0000-C000-000000000046}"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{F704E861-9E52-464F-B786-DA5EB2320FDD}\TypeLib">
      <registryValue
          value="{F010BE25-296D-4036-980F-5A0669A17577}"
          valueType="REG_SZ"
          />
      <registryValue
          name="Version"
          value="1.0"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{FC84FC58-1286-40C4-9DA0-C8EF6EC241E0}">
      <registryValue
          value="IWSManSession"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{FC84FC58-1286-40C4-9DA0-C8EF6EC241E0}\ProxyStubClsid32">
      <registryValue
          value="{00020424-0000-0000-C000-000000000046}"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{FC84FC58-1286-40C4-9DA0-C8EF6EC241E0}\TypeLib">
      <registryValue
          value="{F010BE25-296D-4036-980F-5A0669A17577}"
          valueType="REG_SZ"
          />
      <registryValue
          name="Version"
          value="1.0"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{F3457CA9-ABB9-4FA5-B850-90E8CA300E7F}">
      <registryValue
          value="IWSManEnumerator"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{F3457CA9-ABB9-4FA5-B850-90E8CA300E7F}\ProxyStubClsid32">
      <registryValue
          value="{00020424-0000-0000-C000-000000000046}"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{F3457CA9-ABB9-4FA5-B850-90E8CA300E7F}\TypeLib">
      <registryValue
          value="{F010BE25-296D-4036-980F-5A0669A17577}"
          valueType="REG_SZ"
          />
      <registryValue
          name="Version"
          value="1.0"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{A7A1BA28-DE41-466A-AD0A-C4059EAD7428}">
      <registryValue
          value="IWSManResourceLocator"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{A7A1BA28-DE41-466A-AD0A-C4059EAD7428}\ProxyStubClsid32">
      <registryValue
          value="{00020424-0000-0000-C000-000000000046}"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{A7A1BA28-DE41-466A-AD0A-C4059EAD7428}\TypeLib">
      <registryValue
          value="{F010BE25-296D-4036-980F-5A0669A17577}"
          valueType="REG_SZ"
          />
      <registryValue
          name="Version"
          value="1.0"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{EFFAEAD7-7EC8-4716-B9BE-F2E7E9FB4ADB}">
      <registryValue
          value="IWSManResourceLocatorInternal"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{EFFAEAD7-7EC8-4716-B9BE-F2E7E9FB4ADB}\ProxyStubClsid32">
      <registryValue
          value="{00020424-0000-0000-C000-000000000046}"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{EFFAEAD7-7EC8-4716-B9BE-F2E7E9FB4ADB}\TypeLib">
      <registryValue
          value="{F010BE25-296D-4036-980F-5A0669A17577}"
          valueType="REG_SZ"
          />
      <registryValue
          name="Version"
          value="1.0"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\WSMan.Automation">
      <registryValue
          value="WSMan Automation Class"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\WSMan.Automation\CLSID">
      <registryValue
          value="{BCED617B-EC03-420b-8508-977DC7A686BD}"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\WSMan.Automation\CurVer">
      <registryValue
          value="WSMan.Automation.1"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\WSMan.Automation.1">
      <registryValue
          value="WSMan Automation Class"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\WSMan.Automation.1\CLSID">
      <registryValue
          value="{BCED617B-EC03-420b-8508-977DC7A686BD}"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\WSMan.InternalAutomation">
      <registryValue
          value="WSMan InternalAutomation Class"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\WSMan.InternalAutomation\CLSID">
      <registryValue
          value="{7DE087A5-5DCB-4df7-BB12-0924AD8FBD9A}"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\WSMan.InternalAutomation\CurVer">
      <registryValue
          value="WSMan.InternalAutomation.1"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\WSMan.InternalAutomation.1">
      <registryValue
          value="WSMan InternalAutomation Class"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\WSMan.InternalAutomation.1\CLSID">
      <registryValue
          value="{7DE087A5-5DCB-4df7-BB12-0924AD8FBD9A}"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SOFTWARE\Classes\AppId\{3feb2f63-0eec-4b96-84ab-da1307e0117c}\">
      <registryValue
          value="Microsoft Windows WSMan Provider Host"
          valueType="REG_SZ"
          />
      <registryValue
          name="LaunchPermission"
          value="0100048098000000a400000000000000140000000200840006000000000014000b000000010100000000000100000000000314001f000000010100000000000512000000000314001f000000010100000000000513000000000314001f000000010100000000000514000000000318001f00000001020000000000052000000020020000000314001f00000001010000000000050400000001010000000000051200000001020000000000052000000020020000"
          valueType="REG_BINARY"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SOFTWARE\Classes\AppId\{209444d2-2540-495e-962c-a61ad3243526}\">
      <registryValue
          value="Microsoft Windows WSMan Provider Host With User Settings"
          valueType="REG_SZ"
          />
      <registryValue
          name="LaunchPermission"
          value="0100048098000000a400000000000000140000000200840006000000000014000b000000010100000000000100000000000314001f000000010100000000000512000000000314001f000000010100000000000513000000000314001f000000010100000000000514000000000318001f00000001020000000000052000000020020000000314001f00000001010000000000050400000001010000000000051200000001020000000000052000000020020000"
          valueType="REG_BINARY"
          />
      <registryValue
          name="LoadUserSettings"
          value="1"
          valueType="REG_DWORD"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\CLSID\{9678f47f-2435-475c-b24a-4606f8161c16}\">
      <registryValue
          value="Microsoft Windows WSMan Provider Host"
          valueType="REG_SZ"
          />
      <registryValue
          name="AppId"
          value="{3feb2f63-0eec-4b96-84ab-da1307e0117c}"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey
        buildFilter="not build.arch = wow64"
        keyName="HKEY_CLASSES_ROOT\CLSID\{9678f47f-2435-475c-b24a-4606f8161c16}\LocalServer32"
        >
      <registryValue
          value="%systemroot%\system32\wsmprovhost.exe"
          valueType="REG_EXPAND_SZ"
          />
      <registryValue
          name="ServerExecutable"
          value="%systemroot%\system32\wsmprovhost.exe"
          valueType="REG_EXPAND_SZ"
          />
    </registryKey>
    <registryKey
        buildFilter="build.arch = wow64"
        keyName="HKEY_CLASSES_ROOT\CLSID\{9678f47f-2435-475c-b24a-4606f8161c16}\LocalServer32"
        >
      <registryValue
          value="%systemroot%\syswow64\wsmprovhost.exe"
          valueType="REG_EXPAND_SZ"
          />
      <registryValue
          name="ServerExecutable"
          value="%systemroot%\syswow64\wsmprovhost.exe"
          valueType="REG_EXPAND_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\CLSID\{9acf41ed-d457-4cc1-941b-ab02c26e4686}\">
      <registryValue
          value="Microsoft Windows WSMan Provider Host With User Settings"
          valueType="REG_SZ"
          />
      <registryValue
          name="AppId"
          value="{209444d2-2540-495e-962c-a61ad3243526}"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey
        buildFilter="not build.arch = wow64"
        keyName="HKEY_CLASSES_ROOT\CLSID\{9acf41ed-d457-4cc1-941b-ab02c26e4686}\LocalServer32"
        >
      <registryValue
          value="%systemroot%\system32\wsmprovhost.exe"
          valueType="REG_EXPAND_SZ"
          />
      <registryValue
          name="ServerExecutable"
          value="%systemroot%\system32\wsmprovhost.exe"
          valueType="REG_EXPAND_SZ"
          />
    </registryKey>
    <registryKey
        buildFilter="build.arch = wow64"
        keyName="HKEY_CLASSES_ROOT\CLSID\{9acf41ed-d457-4cc1-941b-ab02c26e4686}\LocalServer32"
        >
      <registryValue
          value="%systemroot%\syswow64\wsmprovhost.exe"
          valueType="REG_EXPAND_SZ"
          />
      <registryValue
          name="ServerExecutable"
          value="%systemroot%\syswow64\wsmprovhost.exe"
          valueType="REG_EXPAND_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\CLSID\{BA9BB214-D930-4206-8F8F-BF0F1EAA4A6B}\">
      <registryValue
          value="PSFactoryBuffer"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\CLSID\{BA9BB214-D930-4206-8F8F-BF0F1EAA4A6B}\InProcServer32">
      <registryValue
          value="%systemroot%\system32\wsmplpxy.dll"
          valueType="REG_EXPAND_SZ"
          />
      <registryValue
          name="ThreadingModel"
          value="Both"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{BA9BB214-D930-4206-8F8F-BF0F1EAA4A6B}\">
      <registryValue
          value="IWSManHostEntrySink"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{BA9BB214-D930-4206-8F8F-BF0F1EAA4A6B}\NumMethods">
      <registryValue
          value="4"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{BA9BB214-D930-4206-8F8F-BF0F1EAA4A6B}\ProxyStubClsid32">
      <registryValue
          value="{BA9BB214-D930-4206-8F8F-BF0F1EAA4A6B}"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{17245DB2-74E5-45F6-8843-B7AEF309B6D6}\">
      <registryValue
          value="IWSManProvHost"
          valueType="REG_SZ"
          />
      <securityDescriptor name="WRP_REGKEY_DEFAULT_SDDL"/>
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{17245DB2-74E5-45F6-8843-B7AEF309B6D6}\NumMethods">
      <registryValue
          value="6"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_CLASSES_ROOT\Interface\{17245DB2-74E5-45F6-8843-B7AEF309B6D6}\ProxyStubClsid32">
      <registryValue
          value="{BA9BB214-D930-4206-8F8F-BF0F1EAA4A6B}"
          valueType="REG_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Management Infrastructure\Protocols\WINRM">
      <securityDescriptor name="wmiv2-reg"/>
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Management Infrastructure\Protocols\WINRM\1.0">
      <registryValue
          buildFilter="not build.arch = wow64"
          name="dllPath"
          value="%systemroot%\system32\WsmSvc.dll"
          valueType="REG_EXPAND_SZ"
          />
      <registryValue
          buildFilter="build.arch = wow64"
          name="dllPath"
          value="%systemroot%\syswow64\WsmSvc.dll"
          valueType="REG_EXPAND_SZ"
          />
      <registryValue
          name="dllEntryPoint"
          value="MI_Application_InitializeV1"
          valueType="REG_SZ"
          />
      <securityDescriptor name="wmiv2-reg"/>
    </registryKey>
  </registryKeys>
  <instrumentation
      xmlns:trace="http://schemas.microsoft.com/win/2004/08/events/trace"
      xmlns:win="http://manifests.microsoft.com/win/2004/08/windows/events"
      xmlns:xs="http://www.w3.org/2001/XMLSchema"
      >
    <counters
        xmlns="http://schemas.microsoft.com/win/2005/12/counters"
        schemaVersion="1.0"
        >
      <provider
          applicationIdentity="WsmRes.dll"
          providerGuid="{20fe1a3a-af21-413c-8a7b-b7fbf6c9a059}"
          providerType="userMode"
          symbol="WsmRes"
          >
        <counterSet
            description="Displays quota usage and violation information for WS-Management processes."
            guid="{8a922684-7993-4b38-9929-b7366f01ec4a}"
            instances="multiple"
            name="WSMan Quota Statistics"
            symbol="WsmRes"
            uri="Microsoft.Windows.System.PerfCounters.WSManCounters"
            >
          <counter
              defaultScale="0"
              description="Displays the number of approved and rejected requests per second from authorized users."
              detailLevel="standard"
              id="1"
              name="Total Requests/Second"
              type="perf_counter_counter"
              uri="Microsoft.Windows.System.PerfCounters.WSManCounters.Requests"
              >
            <counterAttributes>
              <counterAttribute name="reference"/>
            </counterAttributes>
          </counter>
          <counter
              defaultScale="0"
              description="Displays the number of user quota violations."
              detailLevel="standard"
              id="2"
              name="User Quota Violations/Second"
              type="perf_counter_counter"
              uri="Microsoft.Windows.System.PerfCounters.WSManCounters.UserViolations"
              >
            <counterAttributes>
              <counterAttribute name="reference"/>
            </counterAttributes>
          </counter>
          <counter
              defaultScale="0"
              description="Displays the number of requests subject to system throttling."
              detailLevel="standard"
              id="3"
              name="System Quota Violations/Second"
              type="perf_counter_counter"
              uri="Microsoft.Windows.System.PerfCounters.WSManCounters.SystemViolations"
              >
            <counterAttributes>
              <counterAttribute name="reference"/>
            </counterAttributes>
          </counter>
          <counter
              defaultScale="0"
              description="Displays the current number of active shells for all users."
              detailLevel="standard"
              id="4"
              name="Active Shells"
              type="perf_counter_rawcount"
              uri="Microsoft.Windows.System.PerfCounters.WSManCounters.CurrentShells"
              >
            <counterAttributes>
              <counterAttribute name="reference"/>
            </counterAttributes>
          </counter>
          <counter
              defaultScale="0"
              description="Displays the current number of active operations for all users."
              detailLevel="standard"
              id="5"
              name="Active Operations"
              type="perf_counter_rawcount"
              uri="Microsoft.Windows.System.PerfCounters.WSManCounters.CurrentOperations"
              >
            <counterAttributes>
              <counterAttribute name="reference"/>
            </counterAttributes>
          </counter>
          <counter
              defaultScale="0"
              description="Displays the current number of active, authorized users."
              detailLevel="standard"
              id="6"
              name="Active Users"
              type="perf_counter_rawcount"
              uri="Microsoft.Windows.System.PerfCounters.WSManCounters.CurrentUsers"
              >
            <counterAttributes>
              <counterAttribute name="reference"/>
            </counterAttributes>
          </counter>
          <counter
              defaultScale="0"
              description="Displays the current process ID (PID)"
              detailLevel="standard"
              id="7"
              name="Process ID"
              type="perf_counter_rawcount"
              uri="Microsoft.Windows.System.PerfCounters.WSManCounters.ProcessID"
              >
            <counterAttributes>
              <counterAttribute name="reference"/>
            </counterAttributes>
          </counter>
        </counterSet>
      </provider>
    </counters>
    <events xmlns="http://schemas.microsoft.com/win/2004/08/events">
      <provider
          guid="{A7975C8F-AC13-49F1-87DA-5A984A4AB417}"
          message="$(string.eventProviderName)"
          messageFileName="%windir%\system32\wsmres.dll"
          name="Microsoft-Windows-WinRM"
          parameterFileName="%windir%\system32\wsmres.dll"
          resourceFileName="%windir%\system32\wsmres.dll"
          symbol="S_Microsoft_Windows_Web_Services_for_Management_Core"
          >
        <channels>
          <channel
              chid="C1"
              isolation="System"
              name="Microsoft-Windows-WinRM/Debug"
              type="Debug"
              >
            <publishing>
              <level>15</level>
              <keywords>3</keywords>
              <controlGuid>{04C6E16D-B99F-4A3A-9B3E-B8325BBC781E}</controlGuid>
            </publishing>
          </channel>
          <channel
              chid="Operational"
              enabled="true"
              isolation="Application"
              message="$(string.Channel.Operational.Name)"
              name="Microsoft-Windows-WinRM/Operational"
              symbol="LOG_WSMAN_OPERATIONAL_CHANNEL"
              type="Operational"
              />
          <channel
              chid="Analytic"
              enabled="false"
              isolation="Application"
              message="$(string.AnalyticChannel)"
              name="Microsoft-Windows-WinRM/Analytic"
              symbol="LOG_WSMAN_ANALYTIC_CHANNEL"
              type="Analytic"
              >
            <publishing>
              <maxBuffers>60</maxBuffers>
            </publishing>
          </channel>
        </channels>
        <tasks>
          <!-- Tasks relates to sub-components. Allowed range for values is 1 - 65280 -->
          <task
              message="$(string.Task.ApiInitialize.Name)"
              name="Task.ApiInitialize"
              value="1"
              />
          <task
              message="$(string.Task.ApiDeinitialize.Name)"
              name="Task.ApiDeinitialize"
              value="2"
              />
          <task
              message="$(string.Task.SessionInitialize.Name)"
              name="Task.SessionInitialize"
              value="3"
              />
          <task
              message="$(string.Task.SessionDeinitialize.Name)"
              name="Task.SessionDeinitialize"
              value="4"
              />
          <task
              message="$(string.Task.ApiCall.Name)"
              name="Task.ApiCall"
              value="5"
              />
          <task
              message="$(string.Task.Proxy.Name)"
              name="Task.Proxy"
              value="6"
              />
          <task
              message="$(string.Task.Authentication.Name)"
              name="Task.Authentication"
              value="7"
              />
          <task
              message="$(string.Task.Authorization.Name)"
              name="Task.Authorization"
              value="8"
              />
          <task
              message="$(string.Task.RequestHandling.Name)"
              name="Task.RequestHandling"
              value="9"
              />
          <task
              message="$(string.Task.ResponseHandling.Name)"
              name="Task.ResponseHandling"
              value="10"
              />
          <task
              message="$(string.Task.ServiceMain.Name)"
              name="Task.ServiceMain"
              value="11"
              />
          <task
              message="$(string.Task.Config.Name)"
              name="Task.Config"
              value="12"
              />
          <task
              message="$(string.Task.Operation.Name)"
              name="Task.Operation"
              value="13"
              />
          <task
              message="$(string.Task.WinRM_Application.Name)"
              name="Task.WinRM_Application"
              value="14"
              />
          <task
              message="$(string.Task.WinRM_Session.Name)"
              name="Task.WinRM_Session"
              value="15"
              />
          <task
              message="$(string.Task.WinRM_Operation.Name)"
              name="Task.WinRM_Operation"
              value="16"
              />
        </tasks>
        <keywords>
          <!-- Keywords describes the category of event or error. Allowed values are the
               lower 32 bits of the mask. -->
          <keyword
              mask="0x0000000000000001"
              message="$(string.Keyword.SoapTrace.Name)"
              name="Keyword.SoapTrace"
              />
          <keyword
              mask="0x0000000000000002"
              message="$(string.Keyword.Client.Name)"
              name="Keyword.Client"
              />
          <keyword
              mask="0x0000000000000004"
              message="$(string.Keyword.Server.Name)"
              name="Keyword.Server"
              />
          <keyword
              mask="0x0000000000000008"
              message="$(string.Keyword.Security.Name)"
              name="Keyword.Security"
              />
          <keyword
              mask="0x0000000000000010"
              message="$(string.Keyword.QuotaViolation.Name)"
              name="Keyword.QuotaViolation"
              />
          <keyword
              mask="0x0000000000000020"
              message="$(string.Keyword.Transfer.Name)"
              name="Keyword.Transfer"
              />
          <keyword
              mask="0x0000000000000040"
              message="$(string.Keyword.Error.Name)"
              name="Keyword.Error"
              />
        </keywords>
        <templates>
          <template tid="T_LOG_WSMAN_SERVICE_HTTPS_DISABLED"/>
          <template tid="T_LOG_WSMAN_SERVICE_HTTPS_URLPREFIX_IN_USE">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
            <data
                inType="win:UnicodeString"
                name="param2"
                />
          </template>
          <template tid="T_LOG_WSMAN_SUBS_HTTPS_URLPREFIX_IN_USE">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
          </template>
          <template tid="T_LOG_WSMAN_SERVICE_HTTPS_ADD_URL_FAILED">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
            <data
                inType="win:UnicodeString"
                name="param2"
                />
          </template>
          <template tid="T_LOG_WSMAN_SERVICE_HTTP_ADD_URL_FAILED">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
            <data
                inType="win:UnicodeString"
                name="param2"
                />
          </template>
          <template tid="T_LOG_WSMAN_SUBS_HTTPS_ADD_URL_FAILED">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
            <data
                inType="win:UnicodeString"
                name="param2"
                />
          </template>
          <template tid="T_LOG_WSMAN_SUBS_HTTP_ADD_URL_FAILED">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
            <data
                inType="win:UnicodeString"
                name="param2"
                />
          </template>
          <template tid="T_LOG_WSMAN_CRL_OFFLINE"/>
          <template tid="T_LOG_WSMAN_LOGON_OFFLINE">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
          </template>
          <template tid="T_LOG_MSG_WSMAN_CLIENT_CERTIFICATE_TOO_LONG"/>
          <template tid="T_LOG_WSMAN_UNABLE_TO_LOAD_PLUGIN">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
            <data
                inType="win:UnicodeString"
                name="param2"
                />
          </template>
          <template tid="T_LOG_WSMAN_PLUGIN_SHUTDOWN_FAILED">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
            <data
                inType="win:UnicodeString"
                name="param2"
                />
          </template>
          <template tid="T_LOG_WSMAN_COMPATIBILITY_LISTENER_ENABLED">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
            <data
                inType="win:UnicodeString"
                name="param2"
                />
            <data
                inType="win:UnicodeString"
                name="param3"
                />
            <data
                inType="win:UnicodeString"
                name="param4"
                />
          </template>
          <template tid="T_LOG_WSMAN_CONFIG_SHARING_SSL_CONFIG">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
            <data
                inType="win:UnicodeString"
                name="param2"
                />
          </template>
          <template tid="T_LOG_WSMAN_SERVICE_STARTUP_FAILURE">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
          </template>
          <template tid="T_LOG_WSMAN_SERVICE_UNSECURE_HTTP_CONNECTION_ESTABLISHED">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
          </template>
          <template tid="T_LOG_WSMAN_SERVICE_UNSECURE_BASIC_AUTHENTICATION_ENABLED"/>
          <template tid="T_LOG_MSG_WSMAN_INVALID_STAR_IPFILTER">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
          </template>
          <template tid="T_LOG_MSG_WSMAN_INVALID_RANGES_IPFILTER">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
          </template>
          <template tid="T_LOG_WSMAN_SERVICE_POLICY_CHANGE_NOTIFICATION_FAILURE">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
          </template>
          <template tid="T_LOG_WSMAN_SERVICE_CATASTROPHIC_SECURITY_FAILURE">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
          </template>
          <template tid="T_LOG_WSMAN_SERVICE_RE_REGISTRATION_FAILURE_ADDRESS_CHANGE">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
          </template>
          <template tid="T_LOG_WSMAN_SERVICE_RE_REGISTRATION_FAILURE_CONFIGURATION_CHANGE">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
          </template>
          <template tid="T_LOG_WSMAN_MIGRATION_LISTENER_IP_PORT_NON_EXISTING_IP">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
            <data
                inType="win:UnicodeString"
                name="param2"
                />
          </template>
          <template tid="T_LOG_WSMAN_MIGRATION_LISTENER_ADDRESS_TRANSPORT_NON_EXISTING_IP">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
            <data
                inType="win:UnicodeString"
                name="param2"
                />
            <data
                inType="win:UnicodeString"
                name="param3"
                />
          </template>
          <template tid="T_LOG_WSMAN_MIGRATION_LISTENER_IP_PORT_NON_EXISTING_MAC_ADDRESS">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
            <data
                inType="win:UnicodeString"
                name="param2"
                />
            <data
                inType="win:UnicodeString"
                name="param3"
                />
          </template>
          <template tid="T_LOG_WSMAN_MIGRATION_LISTENER_ADDRESS_TRANSPORT_NON_EXISTING_MAC_ADDRESS">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
            <data
                inType="win:UnicodeString"
                name="param2"
                />
            <data
                inType="win:UnicodeString"
                name="param3"
                />
          </template>
          <template tid="T_LOG_WSMAN_MIGRATION_LISTENER_IP_PORT_ALREADY_EXISTS">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
            <data
                inType="win:UnicodeString"
                name="param2"
                />
            <data
                inType="win:UnicodeString"
                name="param3"
                />
            <data
                inType="win:UnicodeString"
                name="param4"
                />
            <data
                inType="win:UnicodeString"
                name="param5"
                />
          </template>
          <template tid="T_LOG_WSMAN_MIGRATION_LISTENER_ADDRESS_TRANSPORT_ALREADY_EXISTS">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
            <data
                inType="win:UnicodeString"
                name="param2"
                />
          </template>
          <template tid="T_LOG_WSMAN_SERVICE_MIGRATION_FAILURE">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
            <data
                inType="win:UnicodeString"
                name="param2"
                />
          </template>
          <template tid="T_LOG_WSMAN_SERVICE_NOTIFICATION_READ_CURRENT_FAILURE">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
          </template>
          <template tid="T_LOG_WSMAN_SERVICE_NOTIFICATION_APPLY_FAILURE">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
          </template>
          <template tid="T_LOG_WSMAN_SERVICE_CONFIG_CORRUPTED"/>
          <template tid="T_LOG_MSG_WSMAN_INVALID_PATTERN_TRUSTEDHOSTS">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
          </template>
          <template
              name="Started Listening"
              tid="T_LOG_WSMAN_SERVICE_STARTED_LISTENING"
              />
          <template
              name="Stopped Listening"
              tid="T_LOG_WSMAN_SERVICE_STOPPED_LISTENING"
              />
          <template
              name="Unusable Listener"
              tid="T_LOG_WSMAN_SERVICE_UNUSABLE_LISTENER"
              >
            <data
                inType="win:UnicodeString"
                name="transport"
                />
            <data
                inType="win:UnicodeString"
                name="address"
                />
          </template>
          <template tid="T_LOG_WSMAN_SERVICE_ADDRESS_CHANGE_IGNORED">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
          </template>
          <template tid="T_LOG_WSMAN_SERVICE_ADDRESS_CHANGE_SUCCESSFULL"/>
          <template tid="T_LOG_WSMAN_PLUGIN_LOAD">
            <data
                inType="win:UnicodeString"
                name="provider"
                />
            <data
                inType="win:UnicodeString"
                name="path"
                />
          </template>
          <template tid="T_LOG_WSMAN_PLUGIN_UNLOAD">
            <data
                inType="win:UnicodeString"
                name="provider"
                />
            <data
                inType="win:UnicodeString"
                name="path"
                />
          </template>
          <template tid="T_LOG_WSMAN_IIS_CONFIGURATION_READ_FAILED">
            <data
                inType="win:UnicodeString"
                name="errorcode"
                />
            <data
                inType="win:UnicodeString"
                name="errordetail"
                />
          </template>
          <template tid="T_LOG_WSMAN_PLUGIN_CONFIGURATION_READ_FAILED">
            <data
                inType="win:UnicodeString"
                name="pluginName"
                />
            <data
                inType="win:UnicodeString"
                name="errorcode"
                />
            <data
                inType="win:UnicodeString"
                name="errordetail"
                />
          </template>
          <template tid="T_LOG_WSMAN_OP_AUTORESTART_FAILED">
            <data
                inType="win:UnicodeString"
                name="errorcode"
                />
          </template>
          <template tid="T_LOG_WSMAN_OP_AUTORESTART_PLUGIN_FAILED">
            <data
                inType="win:UnicodeString"
                name="pluginName"
                />
            <data
                inType="win:UnicodeString"
                name="errorcode"
                />
          </template>
          <template tid="T_LOG_WSMAN_OP_AUTORESTART_PLUGIN_DONE">
            <data
                inType="win:UnicodeString"
                name="pluginName"
                />
          </template>
          <template tid="T_LOG_WSMAN_SPN_CREATION">
            <data
                inType="win:UnicodeString"
                name="spn1"
                />
            <data
                inType="win:UnicodeString"
                name="spn2"
                />
            <data
                inType="win:UnicodeString"
                name="error"
                />
          </template>
          <template tid="T_LOG_WSMAN_CREDSSP_INIT_FAILED">
            <data
                inType="win:UnicodeString"
                name="error"
                />
          </template>
          <template tid="T_LOG_WSMAN_CREATE_SESSION">
            <data
                inType="win:UnicodeString"
                name="connection"
                />
          </template>
          <template tid="T_LOG_WSMAN_CREATE_SESSION_COMPLETED_NO_ERROR"/>
          <template tid="T_LOG_WSMAN_CREATE_SESSION_FAILED">
            <data
                inType="win:UInt32"
                name="errorCode"
                />
          </template>
          <template tid="T_LOG_WSMAN_INITIALIZE_API"/>
          <template tid="T_LOG_WSMAN_INITIALIZE_API_COMPLETED">
            <data
                inType="win:UInt32"
                name="errorCode"
                />
          </template>
          <template tid="T_LOG_WSMAN_INITIALIZE_API_COMPLETED_NO_ERROR"/>
          <template tid="T_LOG_WSMAN_DEINITIALIZE_API"/>
          <template tid="T_LOG_WSMAN_DEINITIALIZE_API_COMPLETED_NO_ERROR"/>
          <template tid="T_LOG_WSMAN_DEINITIALIZE_API_FAILED">
            <data
                inType="win:UInt32"
                name="errorCode"
                />
          </template>
          <template tid="T_LOG_WSMAN_CLOSE_SESSION"/>
          <template tid="T_LOG_WSMAN_CLOSE_SESSION_COMPLETED_NO_ERROR"/>
          <template tid="T_LOG_WSMAN_CLOSE_SESSION_FAILED">
            <data
                inType="win:UInt32"
                name="errorCode"
                />
          </template>
          <template tid="T_LOG_WSMAN_SET_SESSION_OPTION_COMPLETED_NO_ERROR">
            <data
                inType="win:UInt32"
                name="optionCode"
                />
            <data
                inType="win:UnicodeString"
                name="optionValue"
                />
          </template>
          <template tid="T_LOG_WSMAN_SET_SESSION_OPTION_FAILED">
            <data
                inType="win:UInt32"
                name="optionCode"
                />
            <data
                inType="win:UInt32"
                name="errorCode"
                />
          </template>
          <template tid="T_LOG_WSMAN_PROXY_DETECT"/>
          <template tid="T_LOG_WSMAN_PROXY_DETECT_DONE">
            <data
                inType="win:UnicodeString"
                name="proxyList"
                />
            <data
                inType="win:UnicodeString"
                name="bypassList"
                />
          </template>
          <template tid="T_LOG_WSMAN_PROXY_SETTING">
            <data
                inType="win:UnicodeString"
                name="proxyList"
                />
            <data
                inType="win:UnicodeString"
                name="bypassList"
                />
          </template>
          <template tid="T_LOG_WSMAN_CREATING_SHELL">
            <data
                inType="win:UnicodeString"
                name="resourceUri"
                />
          </template>
          <template tid="T_LOG_WSMAN_CREATING_SHELL_FAILED">
            <data
                inType="win:UInt32"
                name="errorCode"
                />
          </template>
          <template tid="T_LOG_WSMAN_SENDING_REQUEST">
            <data
                inType="win:UnicodeString"
                name="operationName"
                />
            <data
                inType="win:UnicodeString"
                name="url"
                />
            <data
                inType="win:UInt32"
                name="port"
                />
          </template>
          <template tid="T_LOG_WSMAN_RECEIVED_RESPONSE">
            <data
                inType="win:UnicodeString"
                name="status"
                />
          </template>
          <template tid="T_LOG_WSMAN_RECEIVED_RESPONSE_OK"/>
          <template tid="T_LOG_WSMAN_RECEIVED_RESPONSE_UNH">
            <data
                inType="win:UInt32"
                name="status"
                />
          </template>
          <template tid="T_LOG_WSMAN_RECEIVED_REDIRECT">
            <data
                inType="win:UnicodeString"
                name="location"
                />
          </template>
          <template tid="T_LOG_WSMAN_NOTIFYING_CLIENT_NO_ERROR">
            <data
                inType="win:UnicodeString"
                name="operationName"
                />
          </template>
          <template tid="T_LOG_WSMAN_NOTIFYING_CLIENT_OP_FAILED">
            <data
                inType="win:UnicodeString"
                name="operationName"
                />
            <data
                inType="win:UInt32"
                name="errorCode"
                />
          </template>
          <template tid="T_LOG_WSMAN_RUNNING_COMMAND"/>
          <template tid="T_LOG_WSMAN_RUNNING_COMMAND_FAILED">
            <data
                inType="win:UInt32"
                name="errorCode"
                />
          </template>
          <template tid="T_LOG_WSMAN_CLOSING_COMMAND"/>
          <template tid="T_LOG_WSMAN_CLOSING_COMMAND_FAILED">
            <data
                inType="win:UInt32"
                name="errorCode"
                />
          </template>
          <template tid="T_LOG_WSMAN_CLOSING_SHELL"/>
          <template tid="T_LOG_WSMAN_CLOSING_SHELL_FAILED">
            <data
                inType="win:UInt32"
                name="errorCode"
                />
          </template>
          <template tid="T_LOG_WSMAN_SIGNAL_SHELL"/>
          <template tid="T_LOG_WSMAN_SIGNAL_SHELL_FAILED">
            <data
                inType="win:UInt32"
                name="errorCode"
                />
          </template>
          <template tid="T_LOG_WSMAN_SIGNAL_COMMAND"/>
          <template tid="T_LOG_WSMAN_SIGNAL_COMMAND_FAILED">
            <data
                inType="win:UInt32"
                name="errorCode"
                />
          </template>
          <template tid="T_LOG_WSMAN_CLOSING_OPERATION"/>
          <template tid="T_LOG_WSMAN_CLOSING_OPERATION_COMPLETED_NO_ERROR">
            <data
                inType="win:UnicodeString"
                name="operationName"
                />
          </template>
          <template tid="T_LOG_WSMAN_CLOSING_OPERATION_FAILED">
            <data
                inType="win:UnicodeString"
                name="operationName"
                />
            <data
                inType="win:UInt32"
                name="errorCode"
                />
          </template>
          <template tid="T_LOG_WSMAN_SENDING_SHELL_INPUT"/>
          <template tid="T_LOG_WSMAN_SENDING_COMMAND_INPUT"/>
          <template tid="T_LOG_WSMAN_SENDING_SHELL_INPUT_FAILED">
            <data
                inType="win:UInt32"
                name="errorCode"
                />
          </template>
          <template tid="T_LOG_WSMAN_RECEIVING_SHELL_OUTPUT"/>
          <template tid="T_LOG_WSMAN_RECEIVING_SHELL_OUTPUT_FAILED">
            <data
                inType="win:UInt32"
                name="errorCode"
                />
          </template>
          <template tid="T_LOG_WSMAN_RECEIVING_COMMAND_OUTPUT"/>
          <template tid="T_LOG_WSMAN_GETTING_ERROR_MESSAGE_COMPLETED_NO_ERROR">
            <data
                inType="win:UInt32"
                name="inputErrorCode"
                />
            <data
                inType="win:UnicodeString"
                name="languageCode"
                />
          </template>
          <template tid="T_LOG_WSMAN_GETTING_ERROR_MESSAGE_FAILED">
            <data
                inType="win:UInt32"
                name="inputErrorCode"
                />
            <data
                inType="win:UInt32"
                name="errorCode"
                />
          </template>
          <template tid="T_LOG_WSMAN_ACCESS_DENIED_DIFF_SID">
            <data
                inType="win:UnicodeString"
                name="apiCall"
                />
          </template>
          <template tid="T_LOG_WSMAN_GET_SESSION_OPTION">
            <data
                inType="win:UInt32"
                name="optionCode"
                />
          </template>
          <template tid="T_LOG_WSMAN_AUTH_MECHANISM">
            <data
                inType="win:UnicodeString"
                name="authentication"
                />
          </template>
          <template tid="T_LOG_WSMAN_AUTH_FAILED_BAD_CREDS"/>
          <template tid="T_LOG_WSMAN_PROXY_AUTH_FAILED_BAD_CREDS"/>
          <template tid="T_LOG_WSMAN_HTTP_SERVER_CERT_FAILURE">
            <data
                inType="win:UnicodeString"
                name="machineName"
                />
            <data
                inType="win:UnicodeString"
                name="port"
                />
            <data
                inType="win:UnicodeString"
                name="error1"
                />
            <data
                inType="win:UnicodeString"
                name="error2"
                />
            <data
                inType="win:UnicodeString"
                name="error3"
                />
            <data
                inType="win:UnicodeString"
                name="error4"
                />
            <data
                inType="win:UnicodeString"
                name="error5"
                />
            <data
                inType="win:UnicodeString"
                name="error6"
                />
            <data
                inType="win:UnicodeString"
                name="error7"
                />
            <data
                inType="win:UnicodeString"
                name="error8"
                />
          </template>
          <template tid="T_LOG_WSMAN_AUTH_NOT_SUPPORTED_BY_SERVER">
            <data
                inType="win:UnicodeString"
                name="authClient"
                />
            <data
                inType="win:UnicodeString"
                name="authServer1"
                />
            <data
                inType="win:UnicodeString"
                name="authServer2"
                />
            <data
                inType="win:UnicodeString"
                name="authServer3"
                />
            <data
                inType="win:UnicodeString"
                name="authServer4"
                />
            <data
                inType="win:UnicodeString"
                name="authServer5"
                />
          </template>
          <template tid="T_LOG_WSMAN_ACCESS_DENIED_WITH_SUPPORTED_SERVER_AUTH">
            <data
                inType="win:UnicodeString"
                name="destinationMachine"
                />
          </template>
          <template tid="T_LOG_WSMAN_ACCESS_DENIED_WITH_SUPPORTED_SERVER_AUTH_EXT">
            <data
                inType="win:UnicodeString"
                name="destinationMachine"
                />
            <data
                inType="win:UnicodeString"
                name="authServer1"
                />
            <data
                inType="win:UnicodeString"
                name="authServer2"
                />
            <data
                inType="win:UnicodeString"
                name="authServer3"
                />
            <data
                inType="win:UnicodeString"
                name="authServer4"
                />
            <data
                inType="win:UnicodeString"
                name="authServer5"
                />
          </template>
          <template tid="T_LOG_WSMAN_AUTH_NOT_SUPPORTED_BY_PROXY">
            <data
                inType="win:UnicodeString"
                name="authProxy1"
                />
            <data
                inType="win:UnicodeString"
                name="authProxy2"
                />
            <data
                inType="win:UnicodeString"
                name="authProxy3"
                />
            <data
                inType="win:UnicodeString"
                name="authProxy4"
                />
            <data
                inType="win:UnicodeString"
                name="authProxy5"
                />
          </template>
          <template tid="T_LOG_WSMAN_AUTH_CHOSEN_METHOD">
            <data
                inType="win:UnicodeString"
                name="auth"
                />
          </template>
          <template tid="T_LOG_WSMAN_AUTOLOGONPOLICY_LOW"/>
          <template tid="T_LOG_WSMAN_AUTOLOGONPOLICY_HIGH"/>
          <template tid="T_LOG_WSMAN_PROCESS_CLIENT_REQUEST">
            <data
                inType="win:UnicodeString"
                name="operationName"
                />
          </template>
          <template tid="T_LOG_WSMAN_SEND_RESPONSE_PACKET">
            <data
                inType="win:UnicodeString"
                name="operationName"
                />
          </template>
          <template tid="T_LOG_WSMAN_RESEND_REQ_NEXT_PROXY_CANNOT_CONNECT"/>
          <template tid="T_LOG_WSMAN_RESEND_REQ_NEXT_PROXY_DEST_UNREACH"/>
          <template tid="T_LOG_WSMAN_NETWORK_TIMEDOUT"/>
          <template tid="T_LOG_WSMAN_LOGIN_FAILURE"/>
          <template tid="T_LOG_WSMAN_CREATE_HOST_FAILURE">
            <data
                inType="win:UInt32"
                name="errorCode"
                />
          </template>
          <template tid="T_LOG_WSMAN_HOST_ABNORMAL_TERMINATION">
            <data
                inType="win:UInt32"
                name="errorCode"
                />
          </template>
          <template tid="T_LOG_WSMAN_HOST_CREATED_SUCCESS">
            <data
                inType="win:UnicodeString"
                name="userName"
                />
          </template>
          <template tid="T_LOG_WSMAN_HOST_TERMINATED_SUCCESS">
            <data
                inType="win:UnicodeString"
                name="userName"
                />
          </template>
          <template tid="T_LOG_WSMAN_SEND_HTTP_ERROR">
            <data
                inType="win:UInt16"
                name="httpStatus"
                />
            <data
                inType="win:UInt32"
                name="errorCode"
                />
            <data
                inType="win:UnicodeString"
                name="extraErrorInfo1"
                />
            <data
                inType="win:UnicodeString"
                name="extraErrorInfo2"
                />
          </template>
          <template tid="T_LOG_WSMAN_NAME_NOT_RESOLVED"/>
          <template tid="T_LOG_WSMAN_SEND_RESPONSE_FAULT">
            <data
                inType="win:UnicodeString"
                name="actionUri"
                />
          </template>
          <template tid="T_LOG_WSMAN_SEND_TIMEOUT_RESPONSE">
            <data
                inType="win:UnicodeString"
                name="operationName"
                />
          </template>
          <template tid="T_LOG_WSMAN_OP_SEMANTICCALLBACK_TIMEOUT_RESPONSE">
            <data
                inType="win:UnicodeString"
                name="operationName"
                />
          </template>
          <template tid="T_LOG_WSMAN_ENUMERATION_EXPIRED"/>
          <template tid="T_LOG_WSMAN_SUBSCRIPTION_EXPIRED"/>
          <template tid="T_LOG_WSMAN_PLUGIN_REPORT_CONTEXT">
            <data
                inType="win:UnicodeString"
                name="operationName"
                />
          </template>
          <template tid="T_LOG_WSMAN_PLUGIN_OBJECT_RESULT">
            <data
                inType="win:UnicodeString"
                name="operationName"
                />
          </template>
          <template tid="T_LOG_WSMAN_PLUGIN_OBJECT_EPR_RESULT">
            <data
                inType="win:UnicodeString"
                name="operationName"
                />
          </template>
          <template tid="T_LOG_WSMAN_PLUGIN_OBJECT_BOOKMARK_RESULT">
            <data
                inType="win:UnicodeString"
                name="operationName"
                />
          </template>
          <template tid="T_LOG_WSMAN_PLUGIN_RECEIVE_RESULT"/>
          <template tid="T_LOG_WSMAN_PLUGIN_OPERATION_COMPLETE">
            <data
                inType="win:UnicodeString"
                name="operationName"
                />
          </template>
          <template tid="T_LOG_WSMAN_PLUGIN_GET_OPERATION_PARAMETERS">
            <data
                inType="win:UInt32"
                name="parameters"
                />
            <data
                inType="win:UnicodeString"
                name="operationName"
                />
          </template>
          <template tid="T_LOG_WSMAN_PLUGIN_AUTHZ_USER_COMPLETE">
            <data
                inType="win:UnicodeString"
                name="username"
                />
            <data
                inType="win:UInt32"
                name="errorCode"
                />
          </template>
          <template tid="T_LOG_WSMAN_PLUGIN_AUTHZ_OPERATION_COMPLETE">
            <data
                inType="win:UInt32"
                name="errorCode"
                />
            <data
                inType="win:UnicodeString"
                name="operation"
                />
            <data
                inType="win:UnicodeString"
                name="resourceUri"
                />
          </template>
          <template tid="T_LOG_WSMAN_PLUGIN_REPORT_COMPLETION">
            <data
                inType="win:UInt32"
                name="Flags"
                />
            <data
                inType="win:UInt32"
                name="Result"
                />
          </template>
          <template tid="T_LOG_WSMAN_PLUGIN_GET_CONFIGURATION">
            <data
                inType="win:UInt32"
                name="Flags"
                />
            <data
                inType="win:UInt32"
                name="Result"
                />
          </template>
          <template tid="T_LOG_WSMAN_AN_PLUGIN_FORCED_SHUTDOWN">
            <data
                inType="win:UnicodeString"
                name="Plugin"
                />
          </template>
          <template tid="T_LOG_WSMAN_QUOTA_COMPLETE">
            <data
                inType="win:UnicodeString"
                name="username"
                />
            <data
                inType="win:UInt32"
                name="errorCode"
                />
            <data
                inType="win:UInt32"
                name="maxAllowedConcurrentShells"
                />
            <data
                inType="win:UInt32"
                name="maxAllowedConcurrentOperations"
                />
            <data
                inType="win:UInt32"
                name="timeslotSize"
                />
            <data
                inType="win:UInt32"
                name="maxAllowedOperationsPerTimeslot"
                />
          </template>
          <template tid="T_LOG_WSMAN_AUTHORIZING_USER"/>
          <template tid="T_LOG_WSMAN_AUTHORIZATION_DONE"/>
          <template tid="T_LOG_WSMAN_AUTHORIZATION_FAILED">
            <data
                inType="win:UInt32"
                name="errorCode"
                />
          </template>
          <template tid="T_LOG_WSMAN_SERVICE_STARTING"/>
          <template tid="T_LOG_WSMAN_SERVICE_STARTED"/>
          <template tid="T_LOG_WSMAN_SERVICE_STOPPING"/>
          <template tid="T_LOG_WSMAN_SERVICE_STOPPED"/>
          <template tid="T_LOG_WSMAN_QUICKCONFIG">
            <data
                inType="win:UnicodeString"
                name="message"
                />
          </template>
          <template tid="T_LOG_WSMAN_POLICY_CHANGE_NOTIFICATION_FAILURE">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
            <data
                inType="win:UInt32"
                name="param2"
                />
          </template>
          <template tid="T_LOG_WSMAN_ROBUST_CONNECTION_DISCONNECTED">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
          </template>
          <template tid="T_LOG_WSMAN_ROBUST_CONNECTION_RETRYING"/>
          <template tid="T_LOG_WSMAN_ROBUST_CONNECTION_NEW_CHANNEL_DETECTED"/>
          <template tid="T_LOG_WSMAN_ROBUST_CONNECTION_RECONNECTED">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
          </template>
          <template tid="T_LOG_WSMAN_ROBUST_CONNECTION_GIVING_UP">
            <data
                inType="win:UnicodeString"
                name="param1"
                />
          </template>
          <template tid="T_LOG_WSMAN_SERVICE_START_FAILED">
            <data
                inType="win:UInt32"
                name="errorCode"
                />
          </template>
          <template tid="T_LOG_WSMAN_TRANSFER_EVENT"/>
          <template tid="T_LOG_WSMAN_SEND_401"/>
          <template tid="T_LOG_WSMAN_AUTHENTICATION_DONE">
            <data
                inType="win:UnicodeString"
                name="username"
                />
            <data
                inType="win:UnicodeString"
                name="authenticationMechanism"
                />
          </template>
          <template tid="T_LOG_WSMAN_CERT_AUTHENTICATION_DONE">
            <data
                inType="win:UnicodeString"
                name="subject"
                />
          </template>
          <template tid="T_LOG_WSMAN_ENTERING_PLUGIN">
            <data
                inType="win:UnicodeString"
                name="operation"
                />
            <data
                inType="win:UnicodeString"
                name="resourceURI"
                />
          </template>
          <template tid="T_LOG_WSMAN_LEAVING_PLUGIN">
            <data
                inType="win:UnicodeString"
                name="operation"
                />
          </template>
          <template tid="T_LOG_WSMAN_SOAP_DOCUMENT">
            <data
                inType="win:UInt32"
                name="index"
                />
            <data
                inType="win:UInt32"
                name="totalChunks"
                />
            <data
                inType="win:UInt32"
                name="bytes"
                />
            <data
                inType="win:UnicodeString"
                name="SoapDocument"
                />
          </template>
          <template tid="T_LOG_WSMAN_SOAP_DOCUMENT_UTF8">
            <data
                inType="win:UInt32"
                name="index"
                />
            <data
                inType="win:UInt32"
                name="totalChunks"
                />
            <data
                inType="win:UInt32"
                name="bytes"
                />
            <data
                inType="win:AnsiString"
                name="SoapDocument"
                />
          </template>
          <template tid="T_LOG_WSMAN_QUOTA_MAX_SHELLS">
            <data
                inType="win:UnicodeString"
                name="senderName"
                />
            <data
                inType="win:UInt32"
                name="concurrentShells"
                />
          </template>
          <template tid="T_LOG_WSMAN_QUOTA_MAX_OPERATIONS">
            <data
                inType="win:UnicodeString"
                name="senderName"
                />
            <data
                inType="win:UInt32"
                name="concurrentOperations"
                />
          </template>
          <template tid="T_LOG_WSMAN_QUOTA_USER">
            <data
                inType="win:UInt32"
                name="requests"
                />
            <data
                inType="win:UInt32"
                name="windowTime"
                />
            <data
                inType="win:UnicodeString"
                name="senderName"
                />
            <data
                inType="win:UInt32"
                name="delayHint"
                />
          </template>
          <template tid="T_LOG_WSMAN_QUOTA_SYSTEM">
            <data
                inType="win:UInt32"
                name="requests"
                />
            <data
                inType="win:UInt32"
                name="windowTime"
                />
            <data
                inType="win:UnicodeString"
                name="senderName"
                />
            <data
                inType="win:UInt32"
                name="delayHint"
                />
          </template>
          <template tid="T_LOG_WSMAN_QUOTA_MAXSHELLUSERS">
            <data
                inType="win:UInt32"
                name="users"
                />
          </template>
          <template tid="T_LOG_WSMAN_SERVICE_STARTED_WITH_DEFAULT_CONFIG"/>
          <template tid="T_LOG_WSMAN_CLIENT_OPERATING_WITH_DEFAULT_CONFIG"/>
          <template tid="T_LOG_WSMAN_AN_REQUEST_CONTEXT_ERROR">
            <data
                inType="win:UInt32"
                name="errorCode"
                />
            <data
                inType="win:UnicodeString"
                name="errorString"
                />
            <data
                inType="win:UnicodeString"
                name="extraInformation1"
                />
            <data
                inType="win:UnicodeString"
                name="extraInformation2"
                />
            <data
                inType="win:UnicodeString"
                name="extraInformation3"
                />
            <data
                inType="win:UnicodeString"
                name="extraInformation4"
                />
          </template>
          <template tid="T_LOG_WSMAN_AN_ERROR_CONTEXT_ERROR">
            <data
                inType="win:UInt32"
                name="errorCode"
                />
            <data
                inType="win:UnicodeString"
                name="extraInformation1"
                />
            <data
                inType="win:UnicodeString"
                name="extraInformation2"
                />
            <data
                inType="win:UnicodeString"
                name="extraInformation3"
                />
            <data
                inType="win:UnicodeString"
                name="extraInformation4"
                />
          </template>
          <template tid="T_LOG_WSMAN_AN_EXTRA_DETAILS">
            <data
                inType="win:UInt32"
                name="level"
                />
            <data
                inType="win:UnicodeString"
                name="extraInformation1"
                />
            <data
                inType="win:UnicodeString"
                name="extraInformation2"
                />
            <data
                inType="win:UnicodeString"
                name="extraInformation3"
                />
            <data
                inType="win:UnicodeString"
                name="extraInformation4"
                />
          </template>
          <template tid="T_LOG_WSMAN_MI_APPLICATION">
            <data
                inType="win:UnicodeString"
                name="applicationID"
                />
          </template>
          <template tid="T_LOG_WSMAN_MI_SESSION">
            <data
                inType="win:UnicodeString"
                name="destination"
                />
          </template>
          <template tid="T_LOG_WSMAN_MI_OPERATION">
            <data
                inType="win:UnicodeString"
                name="operationType"
                />
            <data
                inType="win:UnicodeString"
                name="namespaceName"
                />
            <data
                inType="win:UnicodeString"
                name="className"
                />
          </template>
          <template tid="T_LOG_WSMAN_MI_FINISH"/>
          <template tid="T_LOG_WSMAN_MI_ERROR">
            <data
                inType="win:UInt32"
                name="errorCode"
                />
            <data
                inType="win:UnicodeString"
                name="errorMessage"
                />
          </template>
        </templates>
        <events>
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_SERVICE_HTTPS_DISABLED)"
              symbol="LOG_WSMAN_SERVICE_HTTPS_DISABLED"
              template="T_LOG_WSMAN_SERVICE_HTTPS_DISABLED"
              value="0x00072775"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_SERVICE_HTTPS_URLPREFIX_IN_USE)"
              symbol="LOG_WSMAN_SERVICE_HTTPS_URLPREFIX_IN_USE"
              template="T_LOG_WSMAN_SERVICE_HTTPS_URLPREFIX_IN_USE"
              value="0x00072776"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_SUBS_HTTPS_URLPREFIX_IN_USE)"
              symbol="LOG_WSMAN_SUBS_HTTPS_URLPREFIX_IN_USE"
              template="T_LOG_WSMAN_SUBS_HTTPS_URLPREFIX_IN_USE"
              value="0x00072777"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_SERVICE_HTTPS_ADD_URL_FAILED)"
              symbol="LOG_WSMAN_SERVICE_HTTPS_ADD_URL_FAILED"
              template="T_LOG_WSMAN_SERVICE_HTTPS_ADD_URL_FAILED"
              value="0x00072778"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_SERVICE_HTTP_ADD_URL_FAILED)"
              symbol="LOG_WSMAN_SERVICE_HTTP_ADD_URL_FAILED"
              template="T_LOG_WSMAN_SERVICE_HTTP_ADD_URL_FAILED"
              value="0x00072790"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_SUBS_HTTPS_ADD_URL_FAILED)"
              symbol="LOG_WSMAN_SUBS_HTTPS_ADD_URL_FAILED"
              template="T_LOG_WSMAN_SUBS_HTTPS_ADD_URL_FAILED"
              value="0x00072779"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_SUBS_HTTP_ADD_URL_FAILED)"
              symbol="LOG_WSMAN_SUBS_HTTP_ADD_URL_FAILED"
              template="T_LOG_WSMAN_SUBS_HTTP_ADD_URL_FAILED"
              value="0x00072791"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_CRL_OFFLINE)"
              symbol="LOG_WSMAN_CRL_OFFLINE"
              template="T_LOG_WSMAN_CRL_OFFLINE"
              value="0x0007277E"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_LOGON_OFFLINE)"
              symbol="LOG_WSMAN_LOGON_OFFLINE"
              template="T_LOG_WSMAN_LOGON_OFFLINE"
              value="0x0007277F"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_MSG_WSMAN_CLIENT_CERTIFICATE_TOO_LONG)"
              symbol="LOG_MSG_WSMAN_CLIENT_CERTIFICATE_TOO_LONG"
              template="T_LOG_MSG_WSMAN_CLIENT_CERTIFICATE_TOO_LONG"
              value="0x00072780"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_UNABLE_TO_LOAD_PLUGIN)"
              symbol="LOG_WSMAN_UNABLE_TO_LOAD_PLUGIN"
              template="T_LOG_WSMAN_UNABLE_TO_LOAD_PLUGIN"
              value="0x00072781"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_CONFIG_SHARING_SSL_CONFIG)"
              symbol="LOG_WSMAN_CONFIG_SHARING_SSL_CONFIG"
              template="T_LOG_WSMAN_CONFIG_SHARING_SSL_CONFIG"
              value="0x00072782"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_SERVICE_STARTUP_FAILURE)"
              symbol="LOG_WSMAN_SERVICE_STARTUP_FAILURE"
              template="T_LOG_WSMAN_SERVICE_STARTUP_FAILURE"
              value="0x00072787"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_SERVICE_UNSECURE_HTTP_CONNECTION_ESTABLISHED)"
              symbol="LOG_WSMAN_SERVICE_UNSECURE_HTTP_CONNECTION_ESTABLISHED"
              template="T_LOG_WSMAN_SERVICE_UNSECURE_HTTP_CONNECTION_ESTABLISHED"
              value="0x00072788"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_SERVICE_UNSECURE_BASIC_AUTHENTICATION_ENABLED)"
              symbol="LOG_WSMAN_SERVICE_UNSECURE_BASIC_AUTHENTICATION_ENABLED"
              template="T_LOG_WSMAN_SERVICE_UNSECURE_BASIC_AUTHENTICATION_ENABLED"
              value="0x00072789"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_MSG_WSMAN_INVALID_STAR_IPFILTER)"
              symbol="LOG_MSG_WSMAN_INVALID_STAR_IPFILTER"
              template="T_LOG_MSG_WSMAN_INVALID_STAR_IPFILTER"
              value="0x00072792"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_MSG_WSMAN_INVALID_RANGES_IPFILTER)"
              symbol="LOG_MSG_WSMAN_INVALID_RANGES_IPFILTER"
              template="T_LOG_MSG_WSMAN_INVALID_RANGES_IPFILTER"
              value="0x00072793"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_SERVICE_POLICY_CHANGE_NOTIFICATION_FAILURE)"
              symbol="LOG_WSMAN_SERVICE_POLICY_CHANGE_NOTIFICATION_FAILURE"
              template="T_LOG_WSMAN_SERVICE_POLICY_CHANGE_NOTIFICATION_FAILURE"
              value="0x00072794"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_SERVICE_CATASTROPHIC_SECURITY_FAILURE)"
              symbol="LOG_WSMAN_SERVICE_CATASTROPHIC_SECURITY_FAILURE"
              template="T_LOG_WSMAN_SERVICE_CATASTROPHIC_SECURITY_FAILURE"
              value="0x00072798"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_SERVICE_RE_REGISTRATION_FAILURE_ADDRESS_CHANGE)"
              symbol="LOG_WSMAN_SERVICE_RE_REGISTRATION_FAILURE_ADDRESS_CHANGE"
              template="T_LOG_WSMAN_SERVICE_RE_REGISTRATION_FAILURE_ADDRESS_CHANGE"
              value="0xC007C403"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_SERVICE_RE_REGISTRATION_FAILURE_CONFIGURATION_CHANGE)"
              symbol="LOG_WSMAN_SERVICE_RE_REGISTRATION_FAILURE_CONFIGURATION_CHANGE"
              template="T_LOG_WSMAN_SERVICE_RE_REGISTRATION_FAILURE_CONFIGURATION_CHANGE"
              value="0xC007C404"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_MIGRATION_LISTENER_IP_PORT_NON_EXISTING_IP)"
              symbol="LOG_WSMAN_MIGRATION_LISTENER_IP_PORT_NON_EXISTING_IP"
              template="T_LOG_WSMAN_MIGRATION_LISTENER_IP_PORT_NON_EXISTING_IP"
              value="0x00072799"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_MIGRATION_LISTENER_ADDRESS_TRANSPORT_NON_EXISTING_IP)"
              symbol="LOG_WSMAN_MIGRATION_LISTENER_ADDRESS_TRANSPORT_NON_EXISTING_IP"
              template="T_LOG_WSMAN_MIGRATION_LISTENER_ADDRESS_TRANSPORT_NON_EXISTING_IP"
              value="0x0007279A"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_MIGRATION_LISTENER_IP_PORT_NON_EXISTING_MAC_ADDRESS)"
              symbol="LOG_WSMAN_MIGRATION_LISTENER_IP_PORT_NON_EXISTING_MAC_ADDRESS"
              template="T_LOG_WSMAN_MIGRATION_LISTENER_IP_PORT_NON_EXISTING_MAC_ADDRESS"
              value="0x0007279B"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_MIGRATION_LISTENER_ADDRESS_TRANSPORT_NON_EXISTING_MAC_ADDRESS)"
              symbol="LOG_WSMAN_MIGRATION_LISTENER_ADDRESS_TRANSPORT_NON_EXISTING_MAC_ADDRESS"
              template="T_LOG_WSMAN_MIGRATION_LISTENER_ADDRESS_TRANSPORT_NON_EXISTING_MAC_ADDRESS"
              value="0x0007279C"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_MIGRATION_LISTENER_IP_PORT_ALREADY_EXISTS)"
              symbol="LOG_WSMAN_MIGRATION_LISTENER_IP_PORT_ALREADY_EXISTS"
              template="T_LOG_WSMAN_MIGRATION_LISTENER_IP_PORT_ALREADY_EXISTS"
              value="0x0007279D"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_MIGRATION_LISTENER_ADDRESS_TRANSPORT_ALREADY_EXISTS)"
              symbol="LOG_WSMAN_MIGRATION_LISTENER_ADDRESS_TRANSPORT_ALREADY_EXISTS"
              template="T_LOG_WSMAN_MIGRATION_LISTENER_ADDRESS_TRANSPORT_ALREADY_EXISTS"
              value="0x0007279E"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_SERVICE_MIGRATION_FAILURE)"
              symbol="LOG_WSMAN_SERVICE_MIGRATION_FAILURE"
              template="T_LOG_WSMAN_SERVICE_MIGRATION_FAILURE"
              value="0x0007279F"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_SERVICE_NOTIFICATION_READ_CURRENT_FAILURE)"
              symbol="LOG_WSMAN_SERVICE_NOTIFICATION_READ_CURRENT_FAILURE"
              template="T_LOG_WSMAN_SERVICE_NOTIFICATION_READ_CURRENT_FAILURE"
              value="0x000727A0"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_SERVICE_NOTIFICATION_APPLY_FAILURE)"
              symbol="LOG_WSMAN_SERVICE_NOTIFICATION_APPLY_FAILURE"
              template="T_LOG_WSMAN_SERVICE_NOTIFICATION_APPLY_FAILURE"
              value="0x000727A1"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_SERVICE_CONFIG_CORRUPTED)"
              symbol="LOG_WSMAN_SERVICE_CONFIG_CORRUPTED"
              template="T_LOG_WSMAN_SERVICE_CONFIG_CORRUPTED"
              value="0x000727A2"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_MSG_WSMAN_INVALID_PATTERN_TRUSTEDHOSTS)"
              symbol="LOG_MSG_WSMAN_INVALID_PATTERN_TRUSTEDHOSTS"
              template="T_LOG_MSG_WSMAN_INVALID_PATTERN_TRUSTEDHOSTS"
              value="0x000727A3"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_SERVICE_STARTED_LISTENING)"
              symbol="LOG_WSMAN_SERVICE_STARTED_LISTENING"
              template="T_LOG_WSMAN_SERVICE_STARTED_LISTENING"
              value="0x000727A4"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_SERVICE_STOPPED_LISTENING)"
              symbol="LOG_WSMAN_SERVICE_STOPPED_LISTENING"
              template="T_LOG_WSMAN_SERVICE_STOPPED_LISTENING"
              value="0x000727A5"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_SERVICE_UNUSABLE_LISTENER)"
              symbol="LOG_WSMAN_SERVICE_UNUSABLE_LISTENER"
              template="T_LOG_WSMAN_SERVICE_UNUSABLE_LISTENER"
              value="0x000727A6"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_SERVICE_ADDRESS_CHANGE_IGNORED)"
              symbol="LOG_WSMAN_SERVICE_ADDRESS_CHANGE_IGNORED"
              template="T_LOG_WSMAN_SERVICE_ADDRESS_CHANGE_IGNORED"
              value="0x000727A7"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_SERVICE_ADDRESS_CHANGE_SUCCESSFULL)"
              symbol="LOG_WSMAN_SERVICE_ADDRESS_CHANGE_SUCCESSFULL"
              template="T_LOG_WSMAN_SERVICE_ADDRESS_CHANGE_SUCCESSFULL"
              value="0x000727A8"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_IIS_CONFIGURATION_READ_FAILED)"
              symbol="LOG_WSMAN_IIS_CONFIGURATION_READ_FAILED"
              template="T_LOG_WSMAN_IIS_CONFIGURATION_READ_FAILED"
              value="0x000727A9"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_SPN_CREATION)"
              symbol="LOG_WSMAN_SPN_CREATION"
              template="T_LOG_WSMAN_SPN_CREATION"
              value="0x000727AA"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_PLUGIN_CONFIGURATION_READ_FAILED)"
              symbol="LOG_WSMAN_PLUGIN_CONFIGURATION_READ_FAILED"
              template="T_LOG_WSMAN_PLUGIN_CONFIGURATION_READ_FAILED"
              value="0x000727AB"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_CREDSSP_INIT_FAILED)"
              symbol="LOG_WSMAN_CREDSSP_INIT_FAILED"
              template="T_LOG_WSMAN_CREDSSP_INIT_FAILED"
              value="0x000727AC"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_PLUGIN_SHUTDOWN_FAILED)"
              symbol="LOG_WSMAN_PLUGIN_SHUTDOWN_FAILED"
              template="T_LOG_WSMAN_PLUGIN_SHUTDOWN_FAILED"
              value="0x000727AD"
              />
          <event
              keywords="win:EventlogClassic"
              message="$(string.event_LOG_WSMAN_COMPATIBILITY_LISTENER_ENABLED)"
              symbol="LOG_WSMAN_COMPATIBILITY_LISTENER_ENABLED"
              template="T_LOG_WSMAN_COMPATIBILITY_LISTENER_ENABLED"
              value="0x000727AE"
              />
          <!-- Events for Operational channel -->
          <!-- Ranges
              0xX-0x3X ApiInitialize, ApiDeinitialize, SessionInitialize, SessionDeinitialize, ApiCall
              0x4x Proxy
              0x5X - 0x7X RequestHandling
              0x8X - 0x9X ResponseHandling
              0xAX - 0xBX Authentication
              0xCX Authorization
              0xDX ServiceMain
              0xEX Config
            ;-->
          <!-- ApiInitialize, ApiDeinitialize, SessionInitialize, SessionDeinitialize, ApiCall events 0xX-0x3X -->
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.INITIALIZE_API)"
              opcode="win:Start"
              symbol="LOG_WSMAN_OP_INITIALIZE_API"
              task="Task.ApiInitialize"
              template="T_LOG_WSMAN_INITIALIZE_API"
              value="0x00000002"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.INITIALIZE_API_FAILED)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_INITIALIZE_API_FAILED"
              task="Task.ApiInitialize"
              template="T_LOG_WSMAN_INITIALIZE_API_COMPLETED"
              value="0x00000003"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.DEINITIALIZE_API)"
              opcode="win:Start"
              symbol="LOG_WSMAN_OP_DEINITIALIZE_API"
              task="Task.ApiDeinitialize"
              template="T_LOG_WSMAN_DEINITIALIZE_API"
              value="0x00000004"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.DEINITIALIZE_API_FAILED)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_DEINITIALIZE_API_FAILED"
              task="Task.ApiDeinitialize"
              template="T_LOG_WSMAN_DEINITIALIZE_API_FAILED"
              value="0x00000005"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.CREATE_SESSION)"
              opcode="win:Start"
              symbol="LOG_WSMAN_OP_CREATE_SESSION"
              task="Task.SessionInitialize"
              template="T_LOG_WSMAN_CREATE_SESSION"
              value="0x00000006"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.CREATE_SESSION_FAILED)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_CREATE_SESSION_FAILED"
              task="Task.SessionInitialize"
              template="T_LOG_WSMAN_CREATE_SESSION_FAILED"
              value="0x00000007"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.CLOSE_SESSION)"
              opcode="win:Start"
              symbol="LOG_WSMAN_OP_CLOSE_SESSION"
              task="Task.SessionDeinitialize"
              template="T_LOG_WSMAN_CLOSE_SESSION"
              value="0x00000008"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.CLOSE_SESSION_FAILED)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_CLOSE_SESSION_FAILED"
              task="Task.SessionDeinitialize"
              template="T_LOG_WSMAN_CLOSE_SESSION_FAILED"
              value="0x00000009"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.SET_SESSION_OPTION_COMPLETED_NO_ERROR)"
              symbol="LOG_WSMAN_OP_SET_SESSION_OPTION_NO_ERROR"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_SET_SESSION_OPTION_COMPLETED_NO_ERROR"
              value="0x0000000a"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.CREATING_SHELL)"
              opcode="win:Start"
              symbol="LOG_WSMAN_OP_CREATING_SHELL"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_CREATING_SHELL"
              value="0x0000000b"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.CREATING_SHELL_FAILED)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_CREATING_SHELL_FAILED"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_CREATING_SHELL_FAILED"
              value="0x0000000c"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.RUNNING_COMMAND)"
              opcode="win:Start"
              symbol="LOG_WSMAN_OP_RUNNING_COMMAND"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_RUNNING_COMMAND"
              value="0x0000000d"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.RUNNING_COMMAND_FAILED)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_RUNNING_COMMAND_FAILED"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_RUNNING_COMMAND_FAILED"
              value="0x0000000e"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.CLOSING_COMMAND)"
              opcode="win:Start"
              symbol="LOG_WSMAN_OP_CLOSING_COMMAND"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_CLOSING_COMMAND"
              value="0x0000000f"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.CLOSING_SHELL)"
              opcode="win:Start"
              symbol="LOG_WSMAN_OP_CLOSING_SHELL"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_CLOSING_SHELL"
              value="0x00000010"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.SIGNAL_SHELL)"
              opcode="win:Start"
              symbol="LOG_WSMAN_OP_SIGNAL_SHELL"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_SIGNAL_SHELL"
              value="0x00000011"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.SIGNAL_SHELL_FAILED)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_SIGNAL_SHELL_FAILED"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_SIGNAL_SHELL_FAILED"
              value="0x00000012"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.CLOSING_OPERATION)"
              opcode="win:Start"
              symbol="LOG_WSMAN_OP_CLOSING_OPERATION"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_CLOSING_OPERATION"
              value="0x00000013"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.SENDING_SHELL_INPUT)"
              opcode="win:Start"
              symbol="LOG_WSMAN_OP_SENDING_SHELL_INPUT"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_SENDING_SHELL_INPUT"
              value="0x00000014"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.SENDING_SHELL_INPUT_FAILED)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_SENDING_SHELL_INPUT_FAILED"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_SENDING_SHELL_INPUT_FAILED"
              value="0x00000015"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.RECEIVING_SHELL_OUTPUT)"
              opcode="win:Start"
              symbol="LOG_WSMAN_OP_RECEIVING_SHELL_OUTPUT"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_RECEIVING_SHELL_OUTPUT"
              value="0x00000016"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.RECEIVING_SHELL_OUTPUT_FAILED)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_RECEIVING_SHELL_OUTPUT_FAILED"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_RECEIVING_SHELL_OUTPUT_FAILED"
              value="0x00000017"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.RECEIVING_COMMAND_OUTPUT)"
              opcode="win:Start"
              symbol="LOG_WSMAN_OP_RECEIVING_COMMAND_OUTPUT"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_RECEIVING_COMMAND_OUTPUT"
              value="0x00000018"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.GETTING_ERROR_MESSAGE_COMPLETED_NO_ERROR)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_GETTING_ERROR_MESSAGE_COMPLETED_NO_ERROR"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_GETTING_ERROR_MESSAGE_COMPLETED_NO_ERROR"
              value="0x0000001a"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.GET_SESSION_OPTION)"
              opcode="win:Start"
              symbol="LOG_WSMAN_OP_GET_SESSION_OPTION"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_GET_SESSION_OPTION"
              value="0x0000001b"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.ACCESS_DENIED_DIFF_SID)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_ACCESS_DENIED_DIFF_SID"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_ACCESS_DENIED_DIFF_SID"
              value="0x0000001c"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.INITIALIZE_API_COMPLETED_NO_ERROR)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_INITIALIZE_API_COMPLETED_NO_ERROR"
              task="Task.ApiInitialize"
              template="T_LOG_WSMAN_INITIALIZE_API_COMPLETED_NO_ERROR"
              value="0x0000001d"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.DEINITIALIZE_API_COMPLETED_NO_ERROR)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_DEINITIALIZE_API_COMPLETED_NO_ERROR"
              task="Task.ApiDeinitialize"
              template="T_LOG_WSMAN_DEINITIALIZE_API_COMPLETED_NO_ERROR"
              value="0x0000001e"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.CREATE_SESSION_COMPLETED_NO_ERROR)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_CREATE_SESSION_COMPLETED_NO_ERROR"
              task="Task.SessionInitialize"
              template="T_LOG_WSMAN_CREATE_SESSION_COMPLETED_NO_ERROR"
              value="0x0000001f"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.SET_SESSION_OPTION_FAILED)"
              symbol="LOG_WSMAN_OP_SET_SESSION_OPTION_FAILED"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_SET_SESSION_OPTION_FAILED"
              value="0x00000020"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.CLOSE_SESSION_COMPLETED_NO_ERROR)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_CLOSE_SESSION_COMPLETED_NO_ERROR"
              task="Task.SessionDeinitialize"
              template="T_LOG_WSMAN_CLOSE_SESSION_COMPLETED_NO_ERROR"
              value="0x00000021"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.GETTING_ERROR_MESSAGE_FAILED)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_GETTING_ERROR_MESSAGE_FAILED"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_GETTING_ERROR_MESSAGE_FAILED"
              value="0x00000022"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.SIGNAL_COMMAND_FAILED)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_SIGNAL_COMMAND_FAILED"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_SIGNAL_COMMAND_FAILED"
              value="0x00000023"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.SIGNAL_COMMAND)"
              opcode="win:Start"
              symbol="LOG_WSMAN_OP_SIGNAL_COMMAND"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_SIGNAL_COMMAND"
              value="0x00000024"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.CLOSING_SHELL_FAILED)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_CLOSING_SHELL_FAILED"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_CLOSING_SHELL_FAILED"
              value="0x00000025"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.CLOSING_COMMAND_FAILED)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_CLOSING_COMMAND_FAILED"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_CLOSING_COMMAND_FAILED"
              value="0x00000026"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.CLOSING_OPERATION_COMPLETED_NO_ERROR)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_CLOSING_OPERATION_COMPLETED_NO_ERROR"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_CLOSING_OPERATION_COMPLETED_NO_ERROR"
              value="0x00000027"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.CLOSING_OPERATION_FAILED)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_CLOSING_OPERATION_FAILED"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_CLOSING_OPERATION_FAILED"
              value="0x00000028"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.SENDING_COMMAND_INPUT)"
              opcode="win:Start"
              symbol="LOG_WSMAN_OP_SENDING_COMMAND_INPUT"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_SENDING_COMMAND_INPUT"
              value="0x00000029"
              version="0"
              />
          <!-- Proxy events 0x4x -->
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.PROXY_DETECT)"
              opcode="win:Start"
              symbol="LOG_WSMAN_OP_PROXY_DETECT"
              task="Task.Proxy"
              template="T_LOG_WSMAN_PROXY_DETECT"
              value="0x00000040"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.PROXY_DETECT_DONE)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_PROXY_DETECT_DONE"
              task="Task.Proxy"
              template="T_LOG_WSMAN_PROXY_DETECT_DONE"
              value="0x00000041"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.PROXY_SETTING)"
              symbol="LOG_WSMAN_OP_PROXY_SETTING"
              task="Task.Proxy"
              template="T_LOG_WSMAN_PROXY_SETTING"
              value="0x00000042"
              version="0"
              />
          <!-- RequestHandling events 0x5X - 0x7X -->
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.SENDING_REQUEST)"
              opcode="win:Start"
              symbol="LOG_WSMAN_OP_SENDING_REQUEST"
              task="Task.RequestHandling"
              template="T_LOG_WSMAN_SENDING_REQUEST"
              value="0x00000050"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.PROCESS_CLIENT_REQUEST)"
              symbol="LOG_WSMAN_OP_PROCESS_CLIENT_REQUEST"
              task="Task.RequestHandling"
              template="T_LOG_WSMAN_PROCESS_CLIENT_REQUEST"
              value="0x00000051"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.ENTERING_PLUGIN)"
              symbol="LOG_WSMAN_OP_ENTERING_PLUGIN"
              task="Task.RequestHandling"
              template="T_LOG_WSMAN_ENTERING_PLUGIN"
              value="0x00000052"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.LEAVING_PLUGIN)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_LEAVING_PLUGIN"
              task="Task.RequestHandling"
              template="T_LOG_WSMAN_LEAVING_PLUGIN"
              value="0x00000053"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server Keyword.QuotaViolation"
              level="win:Error"
              message="$(string.Event.QUOTA_MAXSHELLUSERS)"
              symbol="LOG_WSMAN_OP_QUOTA_MAXSHELLUSERS"
              task="Task.RequestHandling"
              template="T_LOG_WSMAN_QUOTA_MAXSHELLUSERS"
              value="0x00000054"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server Keyword.QuotaViolation"
              level="win:Error"
              message="$(string.Event.QUOTA_MAX_SHELLS)"
              symbol="LOG_WSMAN_OP_QUOTA_MAX_SHELLS"
              task="Task.RequestHandling"
              template="T_LOG_WSMAN_QUOTA_MAX_SHELLS"
              value="0x00000055"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server"
              level="win:Error"
              message="$(string.Event.CREATE_HOST_FAILURE)"
              symbol="LOG_WSMAN_OP_CREATE_HOST_FAILURE"
              task="Task.RequestHandling"
              template="T_LOG_WSMAN_CREATE_HOST_FAILURE"
              value="0x00000056"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server"
              level="win:Error"
              message="$(string.Event.HOST_ABNORMAL_TERMINATION)"
              symbol="LOG_WSMAN_OP_HOST_ABNORMAL_TERMINATION"
              task="Task.RequestHandling"
              template="T_LOG_WSMAN_HOST_ABNORMAL_TERMINATION"
              value="0x00000057"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.HOST_CREATED_SUCCESS)"
              symbol="LOG_WSMAN_OP_HOST_CREATED_SUCCESS"
              task="Task.RequestHandling"
              template="T_LOG_WSMAN_HOST_CREATED_SUCCESS"
              value="0x00000058"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.HOST_TERMINATED_SUCCESS)"
              symbol="LOG_WSMAN_OP_HOST_TERMINATED_SUCCESS"
              task="Task.RequestHandling"
              template="T_LOG_WSMAN_HOST_TERMINATED_SUCCESS"
              value="0x00000059"
              version="0"
              />
          <!-- ResponseHandling events 0x8X - 0x9X -->
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.RECEIVED_RESPONSE)"
              opcode="win:Start"
              symbol="LOG_WSMAN_OP_RECEIVED_RESPONSE"
              task="Task.ResponseHandling"
              template="T_LOG_WSMAN_RECEIVED_RESPONSE"
              value="0x00000081"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.RECEIVED_RESPONSE_UNH)"
              symbol="LOG_WSMAN_OP_RECEIVED_RESPONSE_UNH"
              task="Task.ResponseHandling"
              template="T_LOG_WSMAN_RECEIVED_RESPONSE_UNH"
              value="0x00000082"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.RECEIVED_REDIRECT)"
              symbol="LOG_WSMAN_OP_RECEIVED_REDIRECT"
              task="Task.ResponseHandling"
              template="T_LOG_WSMAN_RECEIVED_REDIRECT"
              value="0x00000083"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.NOTIFYING_CLIENT_NO_ERROR)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_NOTIFYING_CLIENT_NO_ERROR"
              task="Task.ResponseHandling"
              template="T_LOG_WSMAN_NOTIFYING_CLIENT_NO_ERROR"
              value="0x00000084"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.SEND_RESPONSE_FAULT)"
              symbol="LOG_WSMAN_OP_SEND_RESPONSE_FAULT"
              task="Task.ResponseHandling"
              template="T_LOG_WSMAN_SEND_RESPONSE_FAULT"
              value="0x00000085"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.SEND_RESPONSE_PACKET)"
              symbol="LOG_WSMAN_OP_SEND_RESPONSE_PACKET"
              task="Task.ResponseHandling"
              template="T_LOG_WSMAN_SEND_RESPONSE_PACKET"
              value="0x00000086"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.RESEND_REQ_NEXT_PROXY_CANNOT_CONNECT)"
              symbol="LOG_WSMAN_OP_RESEND_REQ_NEXT_PROXY_CANNOT_CONNECT"
              task="Task.ResponseHandling"
              template="T_LOG_WSMAN_RESEND_REQ_NEXT_PROXY_CANNOT_CONNECT"
              value="0x00000087"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.RESEND_REQ_NEXT_PROXY_DEST_UNREACH)"
              symbol="LOG_WSMAN_OP_RESEND_REQ_NEXT_PROXY_DEST_UNREACH"
              task="Task.ResponseHandling"
              template="T_LOG_WSMAN_RESEND_REQ_NEXT_PROXY_DEST_UNREACH"
              value="0x00000088"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.NAME_NOT_RESOLVED)"
              symbol="LOG_WSMAN_OP_NAME_NOT_RESOLVED"
              task="Task.ResponseHandling"
              template="T_LOG_WSMAN_NAME_NOT_RESOLVED"
              value="0x00000089"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.NETWORK_TIMEDOUT)"
              symbol="LOG_WSMAN_OP_NETWORK_TIMEDOUT"
              task="Task.ResponseHandling"
              template="T_LOG_WSMAN_NETWORK_TIMEDOUT"
              value="0x0000008a"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.LOGIN_FAILURE)"
              symbol="LOG_WSMAN_OP_LOGIN_FAILURE"
              task="Task.ResponseHandling"
              template="T_LOG_WSMAN_LOGIN_FAILURE"
              value="0x0000008b"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server"
              level="win:Error"
              message="$(string.Event.SEND_HTTP_ERROR)"
              symbol="LOG_WSMAN_OP_SEND_HTTP_ERROR"
              task="Task.ResponseHandling"
              template="T_LOG_WSMAN_SEND_HTTP_ERROR"
              value="0x0000008c"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.SEND_TIMEOUT_RESPONSE)"
              symbol="LOG_WSMAN_OP_SEND_TIMEOUT_RESPONSE"
              task="Task.ResponseHandling"
              template="T_LOG_WSMAN_SEND_TIMEOUT_RESPONSE"
              value="0x0000008d"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.NOTIFYING_CLIENT_OP_FAILED)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_NOTIFYING_CLIENT_OP_FAILED"
              task="Task.ResponseHandling"
              template="T_LOG_WSMAN_NOTIFYING_CLIENT_OP_FAILED"
              value="0x0000008e"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.RECEIVED_RESPONSE_OK)"
              opcode="win:Start"
              symbol="LOG_WSMAN_OP_RECEIVED_RESPONSE_OK"
              task="Task.ResponseHandling"
              template="T_LOG_WSMAN_RECEIVED_RESPONSE_OK"
              value="0x0000008f"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.SEMANTICCALLBACK_TIMEOUT_RESPONSE)"
              symbol="LOG_WSMAN_OP_SEMANTICCALLBACK_TIMEOUT_RESPONSE"
              task="Task.ResponseHandling"
              template="T_LOG_WSMAN_OP_SEMANTICCALLBACK_TIMEOUT_RESPONSE"
              value="0x00000090"
              version="0"
              />
          <!-- Authentication events 0xAX - 0xBX -->
          <event
              channel="Operational"
              keywords="Keyword.Client Keyword.Security"
              level="win:Informational"
              message="$(string.Event.AUTH_MECHANISM)"
              symbol="LOG_WSMAN_OP_AUTH_MECHANISM"
              task="Task.Authentication"
              template="T_LOG_WSMAN_AUTH_MECHANISM"
              value="0x000000A0"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client Keyword.Security"
              level="win:Error"
              message="$(string.Event.AUTH_FAILED_BAD_CREDS)"
              symbol="LOG_WSMAN_OP_AUTH_FAILED_BAD_CREDS"
              task="Task.Authentication"
              template="T_LOG_WSMAN_AUTH_FAILED_BAD_CREDS"
              value="0x000000A2"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client Keyword.Security"
              level="win:Error"
              message="$(string.Event.AUTH_NOT_SUPPORTED_BY_SERVER)"
              symbol="LOG_WSMAN_OP_AUTH_NOT_SUPPORTED_BY_SERVER"
              task="Task.Authentication"
              template="T_LOG_WSMAN_AUTH_NOT_SUPPORTED_BY_SERVER"
              value="0x000000A3"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client Keyword.Security"
              level="win:Error"
              message="$(string.Event.ACCESS_DENIED_WITH_SUPPORTED_SERVER_AUTH)"
              symbol="LOG_WSMAN_OP_ACCESS_DENIED_WITH_SUPPORTED_SERVER_AUTH"
              task="Task.Authentication"
              template="T_LOG_WSMAN_ACCESS_DENIED_WITH_SUPPORTED_SERVER_AUTH"
              value="0x000000A4"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client Keyword.Security"
              level="win:Error"
              message="$(string.Event.AUTH_NOT_SUPPORTED_BY_PROXY)"
              symbol="LOG_WSMAN_OP_AUTH_NOT_SUPPORTED_BY_PROXY"
              task="Task.Authentication"
              template="T_LOG_WSMAN_AUTH_NOT_SUPPORTED_BY_PROXY"
              value="0x000000A5"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client Keyword.Security"
              level="win:Informational"
              message="$(string.Event.AUTH_CHOSEN_METHOD)"
              symbol="LOG_WSMAN_OP_AUTH_CHOSEN_METHOD"
              task="Task.Authentication"
              template="T_LOG_WSMAN_AUTH_CHOSEN_METHOD"
              value="0x000000A6"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server Keyword.Security"
              level="win:Error"
              message="$(string.Event.SEND_401)"
              symbol="LOG_WSMAN_OP_SEND_401"
              task="Task.Authentication"
              template="T_LOG_WSMAN_SEND_401"
              value="0x000000A8"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server Keyword.Security"
              level="win:Informational"
              message="$(string.Event.AUTHENTICATION_DONE)"
              symbol="LOG_WSMAN_OP_AUTHENTICATION_DONE"
              task="Task.Authentication"
              template="T_LOG_WSMAN_AUTHENTICATION_DONE"
              value="0x000000A9"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server Keyword.Security"
              level="win:Informational"
              message="$(string.Event.CERT_AUTHENTICATION_DONE)"
              symbol="LOG_WSMAN_OP_CERT_AUTHENTICATION_DONE"
              task="Task.Authentication"
              template="T_LOG_WSMAN_CERT_AUTHENTICATION_DONE"
              value="0x000000AA"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client Keyword.Security"
              level="win:Error"
              message="$(string.Event.PROXY_AUTH_FAILED_BAD_CREDS)"
              symbol="LOG_WSMAN_OP_PROXY_AUTH_FAILED_BAD_CREDS"
              task="Task.Authentication"
              template="T_LOG_WSMAN_PROXY_AUTH_FAILED_BAD_CREDS"
              value="0x000000AB"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client Keyword.Security"
              level="win:Error"
              message="$(string.Event.HTTP_SERVER_CERT_FAILURE)"
              symbol="LOG_WSMAN_OP_HTTP_SERVER_CERT_FAILURE"
              task="Task.Authentication"
              template="T_LOG_WSMAN_HTTP_SERVER_CERT_FAILURE"
              value="0x000000AC"
              version="0"
              />
          <!-- Authorization events 0xCX -->
          <event
              channel="Operational"
              keywords="Keyword.Server Keyword.Security"
              level="win:Informational"
              message="$(string.Event.AUTHORIZING_USER)"
              symbol="LOG_WSMAN_OP_AUTHORIZING_USER"
              task="Task.Authorization"
              template="T_LOG_WSMAN_AUTHORIZING_USER"
              value="0x000000C0"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server Keyword.Security"
              level="win:Informational"
              message="$(string.Event.AUTHORIZATION_DONE)"
              symbol="LOG_WSMAN_OP_AUTHORIZATION_DONE"
              task="Task.Authorization"
              template="T_LOG_WSMAN_AUTHORIZATION_DONE"
              value="0x000000C1"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server Keyword.Security"
              level="win:Informational"
              message="$(string.Event.AUTHORIZATION_FAILED)"
              symbol="LOG_WSMAN_OP_AUTHORIZATION_FAILED"
              task="Task.Authorization"
              template="T_LOG_WSMAN_AUTHORIZATION_FAILED"
              value="0x000000C2"
              version="0"
              />
          <!-- ServiceMain events 0xDX -->
          <event
              channel="Operational"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.SERVICE_STARTING)"
              opcode="win:Start"
              symbol="LOG_WSMAN_OP_SERVICE_STARTING"
              task="Task.ServiceMain"
              template="T_LOG_WSMAN_SERVICE_STARTING"
              value="0x000000D0"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.SERVICE_STARTED)"
              symbol="LOG_WSMAN_OP_SERVICE_STARTED"
              task="Task.ServiceMain"
              template="T_LOG_WSMAN_SERVICE_STARTED"
              value="0x000000D1"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server"
              level="win:Error"
              message="$(string.Event.SERVICE_START_FAILED)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_SERVICE_START_FAILED"
              task="Task.ServiceMain"
              template="T_LOG_WSMAN_SERVICE_START_FAILED"
              value="0x000000D2"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.SERVICE_STOPPING)"
              symbol="LOG_WSMAN_OP_SERVICE_STOPPING"
              task="Task.ServiceMain"
              template="T_LOG_WSMAN_SERVICE_STOPPING"
              value="0x000000D3"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.SERVICE_STOPPED)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_OP_SERVICE_STOPPED"
              task="Task.ServiceMain"
              template="T_LOG_WSMAN_SERVICE_STOPPED"
              value="0x000000D4"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server Keyword.Security"
              level="win:Error"
              message="$(string.Event.SERVICE_STARTED_WITH_DEFAULT_CONFIG)"
              symbol="LOG_WSMAN_OP_SERVICE_STARTED_WITH_DEFAULT_CONFIG"
              task="Task.ServiceMain"
              template="T_LOG_WSMAN_SERVICE_STARTED_WITH_DEFAULT_CONFIG"
              value="0x000000D5"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client Keyword.Security"
              level="win:Error"
              message="$(string.Event.CLIENT_OPERATING_WITH_DEFAULT_CONFIG)"
              symbol="LOG_WSMAN_OP_CLIENT_OPERATING_WITH_DEFAULT_CONFIG"
              task="Task.ServiceMain"
              template="T_LOG_WSMAN_CLIENT_OPERATING_WITH_DEFAULT_CONFIG"
              value="0x000000D6"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server Keyword.Security"
              level="win:Error"
              message="$(string.event_LOG_WSMAN_PLUGIN_CONFIGURATION_READ_FAILED)"
              symbol="LOG_WSMAN_OP_PLUGIN_CONFIGURATION_READ_FAILED"
              task="Task.ServiceMain"
              template="T_LOG_WSMAN_PLUGIN_CONFIGURATION_READ_FAILED"
              value="0x000000D7"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server"
              level="win:Error"
              message="$(string.Event.AUTORESTART_FAILED)"
              symbol="LOG_WSMAN_OP_AUTORESTART_FAILED"
              task="Task.ServiceMain"
              template="T_LOG_WSMAN_OP_AUTORESTART_FAILED"
              value="0x000000D8"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server"
              level="win:Error"
              message="$(string.Event.AUTORESTART_PLUGIN_FAILED)"
              symbol="LOG_WSMAN_OP_AUTORESTART_PLUGIN_FAILED"
              task="Task.ServiceMain"
              template="T_LOG_WSMAN_OP_AUTORESTART_PLUGIN_FAILED"
              value="0x000000D9"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server"
              level="win:Error"
              message="$(string.Event.AUTORESTART_PLUGIN_DONE)"
              symbol="LOG_WSMAN_OP_AUTORESTART_PLUGIN_DONE"
              task="Task.ServiceMain"
              template="T_LOG_WSMAN_OP_AUTORESTART_PLUGIN_DONE"
              value="0x000000DA"
              version="0"
              />
          <!-- Config events 0xEX -->
          <event
              channel="Operational"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.QUICKCONFIG)"
              symbol="LOG_WSMAN_OP_QUICKCONFIG"
              task="Task.Config"
              template="T_LOG_WSMAN_QUICKCONFIG"
              value="0x000000E0"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client Keyword.Server"
              level="win:Informational"
              message="$(string.Event.POLICY_CHANGE_NOTIFICATION_FAILURE)"
              symbol="LOG_WSMAN_OP_POLICY_CHANGE_NOTIFICATION_FAILURE"
              task="Task.Config"
              template="T_LOG_WSMAN_POLICY_CHANGE_NOTIFICATION_FAILURE"
              value="0x000000E5"
              version="0"
              />
          <!-- Events for Analytic channel -->
          <!-- Ranges
               FF TransferEvent
              1xx ApiInitialize, ApiDeinitialize, SessionInitialize, SessionDeinitialize, ApiCall
              2xx Proxy
              3xx RequestHandling
              4xx ResponseHandling
              5xx Authentication
              6xx Authorization
              70x ServiceMain
              71x Config
              73x Utility
              ;-->
          <!-- Transfer event for Analytic channel FF-->
          <event
              channel="Analytic"
              keywords="Keyword.Client Keyword.Server Keyword.Transfer"
              level="win:Informational"
              message="$(string.Event.TRANSFER_EVENT)"
              symbol="LOG_WSMAN_AN_TRANSFER_EVENT"
              template="T_LOG_WSMAN_TRANSFER_EVENT"
              value="0x000000FF"
              version="0"
              />
          <!-- ApiInitialize, ApiDeinitialize, SessionInitialize, SessionDeinitialize, ApiCall events 0x1xx -->
          <event
              channel="Analytic"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.PLUGIN_REPORT_CONTEXT)"
              symbol="LOG_WSMAN_AN_PLUGIN_REPORT_CONTEXT"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_PLUGIN_REPORT_CONTEXT"
              value="0x0000011b"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.PLUGIN_OBJECT_RESULT)"
              symbol="LOG_WSMAN_AN_PLUGIN_OBJECT_RESULT"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_PLUGIN_OBJECT_RESULT"
              value="0x0000011c"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.PLUGIN_OBJECT_EPR_RESULT)"
              symbol="LOG_WSMAN_AN_PLUGIN_OBJECT_EPR_RESULT"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_PLUGIN_OBJECT_EPR_RESULT"
              value="0x0000011d"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.PLUGIN_OBJECT_BOOKMARK_RESULT)"
              symbol="LOG_WSMAN_AN_PLUGIN_OBJECT_BOOKMARK_RESULT"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_PLUGIN_OBJECT_BOOKMARK_RESULT"
              value="0x0000011e"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.PLUGIN_RECEIVE_RESULT)"
              symbol="LOG_WSMAN_AN_PLUGIN_RECEIVE_RESULT"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_PLUGIN_RECEIVE_RESULT"
              value="0x0000011f"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.PLUGIN_OPERATION_COMPLETE)"
              symbol="LOG_WSMAN_AN_PLUGIN_OPERATION_COMPLETE"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_PLUGIN_OPERATION_COMPLETE"
              value="0x00000120"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.PLUGIN_GET_OPERATION_PARAMETERS)"
              symbol="LOG_WSMAN_AN_PLUGIN_GET_OPERATION_PARAMETERS"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_PLUGIN_GET_OPERATION_PARAMETERS"
              value="0x00000121"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.PLUGIN_AUTHZ_USER_COMPLETE)"
              symbol="LOG_WSMAN_AN_PLUGIN_AUTHZ_USER_COMPLETE"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_PLUGIN_AUTHZ_USER_COMPLETE"
              value="0x00000122"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.PLUGIN_AUTHZ_OPERATION_COMPLETE)"
              symbol="LOG_WSMAN_AN_PLUGIN_AUTHZ_OPERATION_COMPLETE"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_PLUGIN_AUTHZ_OPERATION_COMPLETE"
              value="0x00000123"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.QUOTA_COMPLETE)"
              symbol="LOG_WSMAN_AN_QUOTA_COMPLETE"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_QUOTA_COMPLETE"
              value="0x00000124"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.GETTING_ERROR_MESSAGE_FAILED)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_AN_GETTING_ERROR_MESSAGE_FAILED"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_GETTING_ERROR_MESSAGE_FAILED"
              value="0x0000012a"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.event_LOG_WSMAN_PLUGIN_LOAD)"
              opcode="win:Start"
              symbol="LOG_WSMAN_PLUGIN_LOAD"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_PLUGIN_LOAD"
              value="0x00000132"
              version="1"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.event_LOG_WSMAN_PLUGIN_UNLOAD)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_PLUGIN_UNLOAD"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_PLUGIN_UNLOAD"
              value="0x00000133"
              version="1"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.PLUGIN_GET_CONFIGURATION)"
              symbol="LOG_WSMAN_AN_PLUGIN_GET_CONFIGURATION"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_PLUGIN_GET_CONFIGURATION"
              value="0x00000134"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.PLUGIN_REPORT_COMPLETION)"
              symbol="LOG_WSMAN_AN_PLUGIN_REPORT_COMPLETION"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_PLUGIN_REPORT_COMPLETION"
              value="0x00000135"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.PLUGIN_FORCED_SHUTDOWN)"
              symbol="LOG_WSMAN_AN_PLUGIN_FORCED_SHUTDOWN"
              task="Task.ApiCall"
              template="T_LOG_WSMAN_AN_PLUGIN_FORCED_SHUTDOWN"
              value="0x00000136"
              version="0"
              />
          <!-- RequestHandling events 0x3xx -->
          <event
              channel="Analytic"
              keywords="Keyword.Client Keyword.SoapTrace"
              level="win:Informational"
              message="$(string.Event.SOAP_CLIENT_SENDING)"
              symbol="LOG_WSMAN_AN_SOAP_CLIENT_SENDING"
              task="Task.RequestHandling"
              template="T_LOG_WSMAN_SOAP_DOCUMENT"
              value="0x00000303"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Server Keyword.SoapTrace"
              level="win:Informational"
              message="$(string.Event.SOAP_LISTENER_RECEIVING)"
              symbol="LOG_WSMAN_AN_SOAP_LISTENER_RECEIVING"
              task="Task.RequestHandling"
              template="T_LOG_WSMAN_SOAP_DOCUMENT"
              value="0x00000304"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Server Keyword.QuotaViolation"
              level="win:Error"
              message="$(string.Event.QUOTA_MAX_OPERATIONS)"
              symbol="LOG_WSMAN_AN_QUOTA_MAX_OPERATIONS"
              task="Task.RequestHandling"
              template="T_LOG_WSMAN_QUOTA_MAX_OPERATIONS"
              value="0x00000306"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Server Keyword.QuotaViolation"
              level="win:Error"
              message="$(string.Event.QUOTA_USER)"
              symbol="LOG_WSMAN_AN_QUOTA_USER"
              task="Task.RequestHandling"
              template="T_LOG_WSMAN_QUOTA_USER"
              value="0x00000307"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Server Keyword.QuotaViolation"
              level="win:Error"
              message="$(string.Event.QUOTA_SYSTEM)"
              symbol="LOG_WSMAN_AN_QUOTA_SYSTEM"
              task="Task.RequestHandling"
              template="T_LOG_WSMAN_QUOTA_SYSTEM"
              value="0x00000308"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Client Keyword.SoapTrace"
              level="win:Informational"
              message="$(string.Event.SOAP_CLIENT_SENDING)"
              symbol="LOG_WSMAN_AN_SOAP_CLIENT_SENDING_UTF8"
              task="Task.RequestHandling"
              template="T_LOG_WSMAN_SOAP_DOCUMENT_UTF8"
              value="0x0000030b"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client Keyword.Server"
              level="win:Informational"
              message="$(string.Event.ROBUST_CONNECTION_DISCONNECTED)"
              symbol="LOG_WSMAN_OP_ROBUST_CONNECTION_DISCONNECTED"
              task="Task.RequestHandling"
              template="T_LOG_WSMAN_ROBUST_CONNECTION_DISCONNECTED"
              value="0x0000030c"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.ROBUST_CONNECTION_RETRYING)"
              symbol="LOG_WSMAN_OP_ROBUST_CONNECTION_RETRYING"
              task="Task.RequestHandling"
              template="T_LOG_WSMAN_ROBUST_CONNECTION_RETRYING"
              value="0x0000030d"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.ROBUST_CONNECTION_NEW_CHANNEL_DETECTED)"
              symbol="LOG_WSMAN_OP_ROBUST_CONNECTION_NEW_CHANNEL_DETECTED"
              task="Task.RequestHandling"
              template="T_LOG_WSMAN_ROBUST_CONNECTION_NEW_CHANNEL_DETECTED"
              value="0x0000030e"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client Keyword.Server"
              level="win:Informational"
              message="$(string.Event.ROBUST_CONNECTION_RECONNECTED)"
              symbol="LOG_WSMAN_OP_ROBUST_CONNECTION_RECONNECTED"
              task="Task.RequestHandling"
              template="T_LOG_WSMAN_ROBUST_CONNECTION_RECONNECTED"
              value="0x0000030f"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client Keyword.Server"
              level="win:Informational"
              message="$(string.Event.ROBUST_CONNECTION_GIVING_UP)"
              symbol="LOG_WSMAN_OP_ROBUST_CONNECTION_GIVING_UP"
              task="Task.RequestHandling"
              template="T_LOG_WSMAN_ROBUST_CONNECTION_GIVING_UP"
              value="0x00000310"
              version="0"
              />
          <!-- ResponseHandling events 0x4XX-->
          <event
              channel="Analytic"
              keywords="Keyword.Server"
              level="win:Error"
              message="$(string.Event.SEND_RESPONSE_FAULT)"
              symbol="LOG_WSMAN_AN_SEND_RESPONSE_FAULT"
              task="Task.ResponseHandling"
              template="T_LOG_WSMAN_SEND_RESPONSE_FAULT"
              value="0x00000401"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Client Keyword.SoapTrace"
              level="win:Informational"
              message="$(string.Event.SOAP_CLIENT_RECEIVING)"
              symbol="LOG_WSMAN_AN_SOAP_CLIENT_RECEIVING"
              task="Task.ResponseHandling"
              template="T_LOG_WSMAN_SOAP_DOCUMENT"
              value="0x00000402"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Server Keyword.SoapTrace"
              level="win:Informational"
              message="$(string.Event.SOAP_LISTENER_SENDING)"
              symbol="LOG_WSMAN_AN_SOAP_LISTENER_SENDING"
              task="Task.ResponseHandling"
              template="T_LOG_WSMAN_SOAP_DOCUMENT"
              value="0x00000403"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.ENUMERATION_EXPIRED)"
              symbol="LOG_WSMAN_AN_ENUMERATION_EXPIRED"
              task="Task.ResponseHandling"
              template="T_LOG_WSMAN_ENUMERATION_EXPIRED"
              value="0x00000411"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Server"
              level="win:Informational"
              message="$(string.Event.SUBSCRIPTION_EXPIRED)"
              symbol="LOG_WSMAN_AN_SUBSCRIPTION_EXPIRED"
              task="Task.ResponseHandling"
              template="T_LOG_WSMAN_SUBSCRIPTION_EXPIRED"
              value="0x00000413"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Server Keyword.SoapTrace"
              level="win:Informational"
              message="$(string.Event.SOAP_LISTENER_SENDING)"
              symbol="LOG_WSMAN_AN_SOAP_LISTENER_SENDING_UTF8"
              task="Task.ResponseHandling"
              template="T_LOG_WSMAN_SOAP_DOCUMENT_UTF8"
              value="0x00000414"
              version="0"
              />
          <!-- Authentication events 0x5xx-->
          <event
              channel="Analytic"
              keywords="Keyword.Client Keyword.Security"
              level="win:Error"
              message="$(string.Event.ACCESS_DENIED_WITH_SUPPORTED_SERVER_AUTH_EXT)"
              symbol="LOG_WSMAN_AN_ACCESS_DENIED_WITH_SUPPORTED_SERVER_AUTH"
              task="Task.Authentication"
              template="T_LOG_WSMAN_ACCESS_DENIED_WITH_SUPPORTED_SERVER_AUTH_EXT"
              value="0x00000507"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Client Keyword.Security"
              level="win:Informational"
              message="$(string.Event.AUTOLOGONPOLICY_LOW)"
              symbol="LOG_WSMAN_AN_AUTOLOGONPOLICY_LOW"
              task="Task.Authentication"
              template="T_LOG_WSMAN_AUTOLOGONPOLICY_LOW"
              value="0x0000050b"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Client Keyword.Security"
              level="win:Informational"
              message="$(string.Event.AUTOLOGONPOLICY_HIGH)"
              symbol="LOG_WSMAN_AN_AUTOLOGONPOLICY_HIGH"
              task="Task.Authentication"
              template="T_LOG_WSMAN_AUTOLOGONPOLICY_HIGH"
              value="0x0000050c"
              version="0"
              />
          <!-- Utility events 0x73x -->
          <event
              channel="Analytic"
              keywords="Keyword.Error"
              level="win:Error"
              message="$(string.Event.REQUEST_CONTEXT_ERROR)"
              symbol="LOG_WSMAN_AN_REQUEST_CONTEXT_ERROR"
              task="Task.Operation"
              template="T_LOG_WSMAN_AN_REQUEST_CONTEXT_ERROR"
              value="0x00000730"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Error"
              level="win:Error"
              message="$(string.Event.ERROR_CONTEXT_ERROR)"
              symbol="LOG_WSMAN_AN_ERROR_CONTEXT_ERROR"
              task="Task.Operation"
              template="T_LOG_WSMAN_AN_ERROR_CONTEXT_ERROR"
              value="0x00000731"
              version="0"
              />
          <event
              channel="Analytic"
              keywords="Keyword.Error"
              level="win:Informational"
              message="$(string.Event.EXTRA_DETAILS)"
              symbol="LOG_WSMAN_AN_EXTRA_DETAILS"
              task="Task.Operation"
              template="T_LOG_WSMAN_AN_EXTRA_DETAILS"
              value="0x00000732"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.MI_APPLICATION_INITIALIZE)"
              opcode="win:Start"
              symbol="LOG_WSMAN_MI_APPLICATION_INITIALIZE"
              task="Task.WinRM_Application"
              template="T_LOG_WSMAN_MI_APPLICATION"
              value="0x00000733"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.MI_APPLICATION_CLOSE)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_MI_APPLICATION_CLOSE"
              task="Task.WinRM_Application"
              template="T_LOG_WSMAN_MI_FINISH"
              value="0x00000734"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.MI_APPLICATION_ERROR)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_MI_APPLICATION_ERROR"
              task="Task.WinRM_Application"
              template="T_LOG_WSMAN_MI_ERROR"
              value="0x00000735"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.MI_SESSION_NEW)"
              opcode="win:Start"
              symbol="LOG_WSMAN_MI_SESSION_NEW"
              task="Task.WinRM_Session"
              template="T_LOG_WSMAN_MI_SESSION"
              value="0x00000736"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.MI_SESSION_CLOSE)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_MI_SESSION_CLOSE"
              task="Task.WinRM_Session"
              template="T_LOG_WSMAN_MI_FINISH"
              value="0x00000737"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.MI_SESSION_ERROR)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_MI_SESSION_ERROR"
              task="Task.WinRM_Session"
              template="T_LOG_WSMAN_MI_ERROR"
              value="0x00000738"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.MI_OPERATION_NEW)"
              opcode="win:Start"
              symbol="LOG_WSMAN_MI_OPERATION_NEW"
              task="Task.WinRM_Operation"
              template="T_LOG_WSMAN_MI_OPERATION"
              value="0x00000739"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Informational"
              message="$(string.Event.MI_OPERATION_FINISH)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_MI_OPERATION_FINISH"
              task="Task.WinRM_Operation"
              template="T_LOG_WSMAN_MI_FINISH"
              value="0x0000073A"
              version="0"
              />
          <event
              channel="Operational"
              keywords="Keyword.Client"
              level="win:Error"
              message="$(string.Event.MI_OPERATION_ERROR)"
              opcode="win:Stop"
              symbol="LOG_WSMAN_MI_OPERATION_ERROR"
              task="Task.WinRM_Operation"
              template="T_LOG_WSMAN_MI_ERROR"
              value="0x0000073B"
              version="0"
              />
        </events>
      </provider>
    </events>
  </instrumentation>
  <configuration
      xmlns:asmv3="urn:schemas-microsoft-com:asm.v3"
      xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State"
      >
    <configurationSchema>
      <xsd:schema
          xmlns="Microsoft-Windows-Web-Services-for-Management-Core"
          targetNamespace="Microsoft-Windows-Web-Services-for-Management-Core"
          >
        <xsd:simpleType
            name="ServiceStartTypeAutoOrDisabled"
            wcm:description="$(resourceString.description11)"
            >
          <xsd:restriction base="xsd:integer">
            <xsd:enumeration value="2"/>
            <xsd:enumeration value="3"/>
          </xsd:restriction>
        </xsd:simpleType>
        <xsd:element
            default="3"
            name="ServiceStartType"
            type="ServiceStartTypeAutoOrDisabled"
            wcm:description="$(resourceString.description13)"
            wcm:displayName="$(resourceString.displayName12)"
            wcm:handler="regkey(&apos;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\WinRM&apos;)"
            wcm:legacyName="Start"
            wcm:legacyType="REG_DWORD"
            wcm:migrate="yes"
            wcm:scope="allUsers"
            />
        <xsd:element
            default="WINRM"
            name="DefaultRemoteProtocol"
            type="xsd:string"
            wcm:accessControl="wmiv2-reg"
            wcm:description="$(resourceString.description21)"
            wcm:displayName="$(resourceString.displayName20)"
            wcm:handler="regkey(&apos;HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Management Infrastructure&apos;)"
            wcm:legacyName="DefaultRemoteProtocol"
            wcm:scope="allUsers"
            />
      </xsd:schema>
    </configurationSchema>
    <metadata/>
  </configuration>
  <migration
      scope="Upgrade,MigWiz,USMT"
      settingsVersion="0"
      >
    <migXml xmlns="">
      <rules context="System">
        <detects>
          <detect>
            <!-- Upgrade specific bahavior -->
            <condition>MigXmlHelper.IsUpgrade()</condition>
          </detect>
        </detects>
        <include>
          <!-- this section of migXml tells the mig eng to collect all the registry keys and values under WSMan -->
          <objectSet>
            <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\* [*]</pattern>
          </objectSet>
        </include>
        <!-- this section of migXml tells the mig eng for the Client, Service and Listener entries collected move them to a new location in the destination registry -->
        <locationModify script="MigXmlHelper.RelativeMove(&apos;HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan&apos;,&apos;HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\Migration&apos;)">
          <objectSet>
            <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan [*]</pattern>
            <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\Client\* [*]</pattern>
            <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\Service\* [*]</pattern>
            <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\Listener\* [*]</pattern>
            <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\Plugin\* [*]</pattern>
            <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\CertMapping\* [*]</pattern>
          </objectSet>
        </locationModify>
        <merge script="MigXmlHelper.SourcePriority()">
          <objectSet>
            <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\Migration\* [*]</pattern>
          </objectSet>
        </merge>
      </rules>
      <rules context="System">
        <detects>
          <detect>
            <!-- PC-to-PC (MigWiz) specific behavior, exclude upgrade -->
            <condition negation="Yes">MigXmlHelper.IsUpgrade()</condition>
          </detect>
        </detects>
        <include>
          <!-- this section of migXml tells the mig eng to collect all the registry keys and values under WSMan -->
          <objectSet>
            <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\* [*]</pattern>
          </objectSet>
        </include>
        <!-- this section of migXml tells the mig eng for the registry keys collected move them to a new location in the destination registry -->
        <!-- Only Client, Service and Listener settings will be migrated by the migration plugin-->
        <locationModify script="MigXmlHelper.RelativeMove(&apos;HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan&apos;,&apos;HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\Migration&apos;)">
          <objectSet>
            <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\* [*]</pattern>
          </objectSet>
        </locationModify>
        <merge script="MigXmlHelper.SourcePriority()">
          <objectSet>
            <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\Migration\* [*]</pattern>
          </objectSet>
        </merge>
      </rules>
      <plugin
          classId="{E550301A-B9D0-4ff9-B22A-BD4A1DD34C20}"
          file="$(runtime.system32)\WSManMigrationPlugin.dll"
          />
    </migXml>
    <supportedComponents>
      <supportedComponent>
        <supportedComponentIdentity
            buildFilter=""
            buildType="$(build.buildType)"
            language="neutral"
            name="Microsoft-Windows-Web-Services-for-Management-Core"
            processorArchitecture="*"
            publicKeyToken="$(Build.WindowsPublicKeyToken)"
            settingsVersionRange="0"
            type=""
            versionScope="nonSxS"
            />
        <migXml xmlns="">
          <rules context="System">
            <detects>
              <detect>
                <!-- Upgrade specific bahavior -->
                <condition>MigXmlHelper.IsUpgrade()</condition>
              </detect>
            </detects>
            <!-- this section of migXml tells the mig eng for the Client, Service and Listener entries collected move them to a new location in the destination registry -->
            <locationModify script="MigXmlHelper.RelativeMove(&apos;HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan&apos;,&apos;HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\Migration&apos;)">
              <objectSet>
                <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan [*]</pattern>
                <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\Client\* [*]</pattern>
                <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\Service\* [*]</pattern>
                <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\Listener\* [*]</pattern>
                <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\Plugin\* [*]</pattern>
                <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\CertMapping\* [*]</pattern>
              </objectSet>
            </locationModify>
            <merge script="MigXmlHelper.SourcePriority()">
              <objectSet>
                <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\Migration\* [*]</pattern>
              </objectSet>
            </merge>
          </rules>
          <rules context="System">
            <detects>
              <detect>
                <!-- PC-to-PC (MigWiz) specific behavior, exclude upgrade -->
                <condition negation="Yes">MigXmlHelper.IsUpgrade()</condition>
              </detect>
            </detects>
            <!-- this section of migXml tells the mig eng for the registry keys collected move them to a new location in the destination registry -->
            <!-- Only Client, Service and Listener settings will be migrated by the migration plugin-->
            <locationModify script="MigXmlHelper.RelativeMove(&apos;HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan&apos;,&apos;HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\Migration&apos;)">
              <objectSet>
                <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\* [*]</pattern>
              </objectSet>
            </locationModify>
            <merge script="MigXmlHelper.SourcePriority()">
              <objectSet>
                <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\Migration\* [*]</pattern>
              </objectSet>
            </merge>
          </rules>
        </migXml>
      </supportedComponent>
      <supportedComponent>
        <supportedComponentIdentity
            language="*"
            name="Microsoft-Windows-Web-Services-for-Management-Core-DL"
            processorArchitecture="*"
            settingsVersionRange="0"
            />
        <migXml xmlns="">
          <rules context="System">
            <detects>
              <detect>
                <!-- Upgrade specific bahavior -->
                <condition>MigXmlHelper.IsUpgrade()</condition>
              </detect>
            </detects>
            <!-- this section of migXml tells the mig eng for the Client, Service and Listener entries collected move them to a new location in the destination registry -->
            <locationModify script="MigXmlHelper.RelativeMove(&apos;HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan&apos;,&apos;HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\Migration&apos;)">
              <objectSet>
                <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan [*]</pattern>
                <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\Client\* [*]</pattern>
                <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\Service\* [*]</pattern>
                <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\Listener\* [*]</pattern>
                <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\Plugin\* [*]</pattern>
                <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\CertMapping\* [*]</pattern>
              </objectSet>
            </locationModify>
            <merge script="MigXmlHelper.SourcePriority()">
              <objectSet>
                <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\Migration\* [*]</pattern>
              </objectSet>
            </merge>
          </rules>
          <rules context="System">
            <detects>
              <detect>
                <!-- PC-to-PC (MigWiz) specific behavior, exclude upgrade -->
                <condition negation="Yes">MigXmlHelper.IsUpgrade()</condition>
              </detect>
            </detects>
            <!-- this section of migXml tells the mig eng for the registry keys collected move them to a new location in the destination registry -->
            <!-- Only Client, Service and Listener settings will be migrated by the migration plugin-->
            <locationModify script="MigXmlHelper.RelativeMove(&apos;HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan&apos;,&apos;HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\Migration&apos;)">
              <objectSet>
                <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\* [*]</pattern>
              </objectSet>
            </locationModify>
            <merge script="MigXmlHelper.SourcePriority()">
              <objectSet>
                <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\WSMan\Migration\* [*]</pattern>
              </objectSet>
            </merge>
          </rules>
        </migXml>
      </supportedComponent>
    </supportedComponents>
    <migrationDisplayID>Additional_Options\Windows_Core_Settings</migrationDisplayID>
  </migration>
  <registryKeys buildFilter="not build.arch = wow64">
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\EventLog\System\WinRM">
      <registryValue
          name="ProviderGuid"
          value="{A7975C8F-AC13-49F1-87DA-5A984A4AB417}"
          valueType="REG_EXPAND_SZ"
          />
    </registryKey>
    <registryKey keyName="HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\WinRM\Parameters">
      <registryValue
          name="ServiceDll"
          value="%SystemRoot%\system32\WsmSvc.dll"
          valueType="REG_EXPAND_SZ"
          />
      <registryValue
          name="ServiceMain"
          value="ServiceMain"
          valueType="REG_SZ"
          />
      <registryValue
          name="ServiceDllUnloadOnStop"
          value="1"
          valueType="REG_DWORD"
          />
    </registryKey>
  </registryKeys>
  <mof name="$(runtime.wbem)\WsmAuto.mof"/>
  <trustInfo>
    <security>
      <accessControl>
        <securityDescriptorDefinitions>
          <securityDescriptorDefinition
              name="wmiv2-reg"
              sddl="D:P(A;CIOI;GRGX;;;BU)(A;CIOI;GA;;;BA)(A;CIOI;GA;;;SY)(A;CIOI;GA;;;CO)"
              />
          <securityDescriptorDefinition
              name="WSMAN_CLIENT_SDDL"
              sddl="D:P(A;CI;GA;;;BA)(A;CI;GR;;;WD)S:P(AU;CISAFA;GW;;;WD)"
              />
          <securityDescriptorDefinition
              name="WRP_REGKEY_DEFAULT_SDDL"
              sddl="$(build.wrpRegKeySddl)"
              />
          <securityDescriptorDefinition
              name="WSMAN_SERVICE_SDDL"
              sddl="D:P(A;CI;GA;;;BA)(A;CI;GR;;;S-1-5-80-569256582-2953403351-2909559716-1301513147-412116970)(A;CI;GR;;;S-1-5-80-4059739203-877974739-1245631912-527174227-2996563517)S:P(AU;CISAFA;GW;;;WD)"
              />
          <securityDescriptorDefinition
              name="WSMAN_LISTENER_SDDL"
              sddl="D:P(A;CI;GA;;;BA)(A;CI;GR;;;S-1-5-80-569256582-2953403351-2909559716-1301513147-412116970)(A;CI;GR;;;S-1-5-80-4059739203-877974739-1245631912-527174227-2996563517)S:P(AU;CISAFA;GW;;;WD)"
              />
          <securityDescriptorDefinition
              name="WSMAN_CUSTOMREMOTESHELL_SDDL"
              sddl="D:P(A;CI;GA;;;BA)(A;CI;GR;;;WD)S:P(AU;CISAFA;GW;;;WD)"
              />
        </securityDescriptorDefinitions>
      </accessControl>
    </security>
  </trustInfo>
  <localization>
    <resources culture="en-US">
      <stringTable>
        <string
            id="displayName0"
            value="Windows Remote Management (WS-Management)"
            />
        <string
            id="displayName1"
            value="WRP_FILE_DEFAULT_SDDL"
            />
        <string
            id="description2"
            value="Default SDDL for Windows Resource Protected file"
            />
        <string
            id="displayName3"
            value="Windows Remote Management"
            />
        <string
            id="displayName5"
            value="WSMAN_CLIENT_SDDL"
            />
        <string
            id="description6"
            value="Security descriptor for client configuration registry keys."
            />
        <string
            id="displayName7"
            value="WRP_REGKEY_DEFAULT_SDDL"
            />
        <string
            id="description8"
            value="Default SDDL for Windows Resource Protected registry key"
            />
        <string
            id="displayName9"
            value="WSMAN_SERVICE_SDDL"
            />
        <string
            id="description10"
            value="Security descriptor for service configuration registry keys."
            />
        <string
            id="description11"
            value="A start type representing either loading on demand or delayed auto start"
            />
        <string
            id="displayName12"
            value="Service Start Type"
            />
        <string
            id="description13"
            value="Determines whether the Windows Remote Management service will start automatically or load on demand."
            />
        <string
            id="displayName14"
            value="WSMAN_LISTENER_SDDL"
            />
        <string
            id="description15"
            value="Security descriptor for listener configuration registry keys."
            />
        <string
            id="displayName16"
            value="Configure Windows Remote Management"
            />
        <string
            id="description17"
            value="If this is set to true, the machine will be configured for remote management using the WS-Management protocol"
            />
        <string
            id="displayName18"
            value="WSMAN_CUSTOMREMOTESHELL_SDDL"
            />
        <string
            id="description19"
            value="Security descriptor for Custom Remote Shell registry keys."
            />
        <string
            id="displayName20"
            value="Default remote protocol"
            />
        <string
            id="description21"
            value="Default remote protocol."
            />
        <string
            id="event_LOG_WSMAN_SERVICE_HTTPS_DISABLED"
            value="The WinRM service is not listening for requests since it failed to listen on at least one address and port. %n%n Remote management using WinRM will fail. %n%n User Action %n Configure listeners by enabling GPO policy for Auto Configuration of listeners or manually create a listener using WinRM command line tool."
            />
        <string
            id="event_LOG_WSMAN_SERVICE_HTTPS_URLPREFIX_IN_USE"
            value="The WinRM service is not listening for %1 requests because there was a failure binding to the URL (%2) in HTTP.SYS. %n%n Another process is registered to listen on the WinRM service URL prefix. %n%n User Action %n Correct this problem by stopping the other process, changing its URL prefix, or by changing the configuration for the WS-Management listening address."
            />
        <string
            id="event_LOG_WSMAN_SUBS_HTTPS_URLPREFIX_IN_USE"
            value="The WS-Management client is not listening for pushed events because there was a failure binding to the URL (%1) in HTTP.SYS. %n%n Another process is registered to listen on the WinRM client URL prefix. %n%n User Action %n Correct this problem by stopping the other process, changing its URL prefix, or by changing the configuration for the WS-Management listening address."
            />
        <string
            id="event_LOG_WSMAN_SERVICE_HTTPS_ADD_URL_FAILED"
            value="The WinRM service is not listening for HTTPS requests because there was a failure binding to the URL (%1) in HTTP.SYS.  %n%n No remote requests will be serviced on that URL. %n%n User Action %n Please use &quot;netsh http&quot; to check if ACL for URL (%1) is set to Network Service. %n%n Additional Data %n The error code received from HTTP.sys is %2: %%%2"
            />
        <string
            id="event_LOG_WSMAN_SERVICE_HTTP_ADD_URL_FAILED"
            value="The WinRM service is not listening for HTTP requests because there was a failure binding to the URL (%1) in HTTP.SYS. %n%n No remote requests will be serviced on that URL. %n%n User Action %n Please use &quot;netsh http&quot; to check if ACL for URL (%1) is set to Network Service. %n%n Additional Data %n The error code received from HTTP.sys is %2: %%%2"
            />
        <string
            id="event_LOG_WSMAN_SUBS_HTTPS_ADD_URL_FAILED"
            value="The WS-Management client is not listening for pushed events because there was a failure binding to the URL (%1) in HTTP.SYS. %n%n User Action %n Please use &quot;netsh http&quot; to check if ACL for URL (%1) is set to Network Service. %n%n Additional Data %n The error code received from HTTP.sys was %2: %%%2"
            />
        <string
            id="event_LOG_WSMAN_SUBS_HTTP_ADD_URL_FAILED"
            value="The WS-Management client is not listening for pushed events because there was a failure binding to the URL (%1) in HTTP.SYS. %n%n User Action %n Please use &quot;netsh http&quot; to check if ACL for URL (%1) is set to Network Service. %n%n Additional Data %n The error code received from HTTP.sys was %2: %%%2"
            />
        <string
            id="event_LOG_WSMAN_CRL_OFFLINE"
            value="The WinRM service cannot validate the client certificate because the revocation status of the certificate or one of the certificates in the certificate chain is either offline or stale. %n%n User Action %n Please ensure that the Certificate Revocation List is accessible and up-to-date."
            />
        <string
            id="event_LOG_WSMAN_LOGON_OFFLINE"
            value="User authentication using Basic authentication scheme failed. %n%n Additional Data %n Unexpected error received from LogonUser %1: %%%1."
            />
        <string
            id="event_LOG_MSG_WSMAN_CLIENT_CERTIFICATE_TOO_LONG"
            value="The client certificate exceeded the maximum size allowed by the WinRM service.%n%n User Action %n Please use a different client certificate or a different authentication mechanism."
            />
        <string
            id="event_LOG_WSMAN_UNABLE_TO_LOAD_PLUGIN"
            value="Request processing failed because the WinRM service cannot load data or event source: DLL=&quot;%1&quot; %n%n User Action %n Please check if &quot;%1&quot; exists. %n%n Additional Data %n Loading %1 failed with error=&quot;%2&quot; (%%%2)."
            />
        <string
            id="event_LOG_WSMAN_PLUGIN_SHUTDOWN_FAILED"
            value="The WinRM service received an error while trying to unloading a data or event source: DLL=&quot;%1&quot; %n%n User Action %n Please check if there is an updated version of this file available: &quot;%1&quot;. %n%n Additional Data %n Shutting down %1 failed with error=&quot;%2&quot; (%%%2)."
            />
        <string
            id="event_LOG_WSMAN_CONFIG_SHARING_SSL_CONFIG"
            value="The SSL configuration for IP %1 and port %2 is shared with another service, such as Internet Information Services (IIS)."
            />
        <string
            id="event_LOG_WSMAN_SERVICE_STARTUP_FAILURE"
            value="The WinRM service is unable to start because of a failure during initialization. %n%n Additional Data %n The error code is %1."
            />
        <string
            id="event_LOG_WSMAN_SERVICE_UNSECURE_HTTP_CONNECTION_ESTABLISHED"
            value="The WinRM service has received an unsecure HTTP connection from %1. %n%n This is not a secure configuration. %n%n User Action %n Set AllowUnencrypted to False in WinRM configuration to ensure packets are encrypted on the wire."
            />
        <string
            id="event_LOG_WSMAN_SERVICE_UNSECURE_BASIC_AUTHENTICATION_ENABLED"
            value="The WinRM service has been configured to accept basic authentication for unsecure HTTP connections. %n%n This is not a secure configuration. %n%n User Action %n Set AllowUnencrypted to False in WinRM configuration to ensure packets are encrypted on the wire."
            />
        <string
            id="event_LOG_MSG_WSMAN_INVALID_STAR_IPFILTER"
            value="IP Filter %1 specified in the GPO policy for Auto Configuration of listeners is invalid and it will be ignored. Due to this issue, the WinRM service cannot use the autoconfigured listener. %n%n &quot;*&quot; is used to indicate that the service should listen on all available IPs on the machine. When &quot;*&quot; is used, other ranges cannot be specified in the filter. %n%n User Action %n Remove other IP ranges if &quot;*&quot; needs to be included in the IP Filter."
            />
        <string
            id="event_LOG_MSG_WSMAN_INVALID_RANGES_IPFILTER"
            value="The IP Range %1 is invalid and it will be ignored.  %n%n Ranges are specified using the syntax IP1-IP2. Multiple ranges are separated using &quot;,&quot; as delimiter. %n Example IPv4 ranges:  2.0.0.1-2.0.0.20, 24.0.0.1-24.0.0.22 %nExample IPv6 ranges:  3FFE:FFFF:7654:FEDA:1245:BA98:0000:0000-3FFE:FFFF:7654:FEDA:1245:BA98:3210:4562 %n%n User Action %n Correct the IP filter %1 using the syntax described above."
            />
        <string
            id="event_LOG_WSMAN_SERVICE_POLICY_CHANGE_NOTIFICATION_FAILURE"
            value="The WinRM service is not listening for policy changes because there was a failure registering for changes to the contents of the WS-Management policy key. %n%n No group policy change will be serviced. %n%n User Action %n Stop and restart the WinRM service. %n%n Additional Data %n The error code was %1."
            />
        <string
            id="event_LOG_WSMAN_SERVICE_CATASTROPHIC_SECURITY_FAILURE"
            value="The WinRM service encountered a catastrophic security failure. The service can no longer run under its security context. %n%n User Action %n Stop and restart the WinRM service. %n%n Additional Data %n The error code is %1."
            />
        <string
            id="event_LOG_WSMAN_SERVICE_RE_REGISTRATION_FAILURE_ADDRESS_CHANGE"
            value="The WinRM service is stopping because there was a failure registering for changes to the IP addresses. %n%n User Action %n Restart the WinRM service. %n%n Additional Data %n The error code was %1."
            />
        <string
            id="event_LOG_WSMAN_SERVICE_RE_REGISTRATION_FAILURE_CONFIGURATION_CHANGE"
            value="The WinRM service is stopping because there was a failure registering for changes to the configuration. %n%n User Action %n Restart the WinRM service. %n%n Additional Data %n The error code was %1."
            />
        <string
            id="event_LOG_WSMAN_MIGRATION_LISTENER_IP_PORT_NON_EXISTING_IP"
            value="The WinRM service cannot migrate the listener with IP address %1 and Port %2 because the IP address does not exist on the destination computer. This listener was ignored during migration. %n%n User Action %n Create the listener again with the correct IP address."
            />
        <string
            id="event_LOG_WSMAN_MIGRATION_LISTENER_ADDRESS_TRANSPORT_NON_EXISTING_IP"
            value="The WinRM service cannot migrate the listener with Address %1 and Transport %2 because the IP address %3 does not exist on the destination computer. This listener was ignored during migration. %n%n User Action %n Create the listener again with the correct IP address."
            />
        <string
            id="event_LOG_WSMAN_MIGRATION_LISTENER_IP_PORT_NON_EXISTING_MAC_ADDRESS"
            value="The WinRM service cannot migrate the listener with IP address %1 and Port %2 because the MAC address %3 does not exist on the destination computer. This listener was ignored during migration. %n%n User Action %n Create the listener again with the correct MAC address."
            />
        <string
            id="event_LOG_WSMAN_MIGRATION_LISTENER_ADDRESS_TRANSPORT_NON_EXISTING_MAC_ADDRESS"
            value="The WinRM service cannot migrate the listener with Address %1 and Transport %2 because the MAC address %3 does not exist on the destination machine. This listener was ignored during migration. %n%n User Action %n Create the listener again with the correct MAC address."
            />
        <string
            id="event_LOG_WSMAN_MIGRATION_LISTENER_IP_PORT_ALREADY_EXISTS"
            value="The WinRM service cannot migrate the listener with IP address %1, Port %2 and Transport %3. A listener that has Address=%4 and Transport=%5 configuration already exists."
            />
        <string
            id="event_LOG_WSMAN_MIGRATION_LISTENER_ADDRESS_TRANSPORT_ALREADY_EXISTS"
            value="The WinRM service cannot migrate the listener with Address %1 and Transport %2. A listener that has the same Address and Transport configuration already exists."
            />
        <string
            id="event_LOG_WSMAN_SERVICE_MIGRATION_FAILURE"
            value="The WinRM service had a failure during migration. %n%n User Action %n Create the configuration again using the WinRM command line tool. %n%n Additional Data %n The error code is: %1 %%%1"
            />
        <string
            id="event_LOG_WSMAN_SERVICE_NOTIFICATION_READ_CURRENT_FAILURE"
            value="The WinRM service had a failure reading the current configuration and is stopping. %n%n User Action %n Use the following command to restore defaults: %n%n winrm invoke Restore winrm/config @{} %n%n Then add any custom configuration settings and restart the service. %n%n Additional Data %n The error code is: %1 %%%1"
            />
        <string
            id="event_LOG_WSMAN_SERVICE_NOTIFICATION_APPLY_FAILURE"
            value="The WinRM service had a failure applying the current configuration and is stopping. %n%n User Action %n Check for previous event log messages and restart the service."
            />
        <string
            id="event_LOG_WSMAN_SERVICE_CONFIG_CORRUPTED"
            value="The WinRM service had a failure reading the current configuration and is stopping. %n%n User Action %n Use the following command to restore defaults: %n%n winrm invoke Restore winrm/config @{} %n%n Then add any custom configuration settings and restart the service. %n%n Additional Data %n The error code is: %1 %%%1"
            />
        <string
            id="event_LOG_MSG_WSMAN_INVALID_PATTERN_TRUSTEDHOSTS"
            value="The host name pattern &quot;%1&quot; is invalid and it will be ignored. Host name patterns must not be empty and they can contain at most one wildcard (&quot;*&quot;). &quot;*&quot; pattern can be used to indicate all hosts; if this pattern is used, no other pattern can show up in the list. Special string &quot;&lt;local&gt;&quot; can be used to indicate all host names that do not have a &apos;.&apos;%n%n User Action %n Correct the host name pattern using the syntax described above."
            />
        <string
            id="event_LOG_WSMAN_SERVICE_STARTED_LISTENING"
            value="The WinRM service is listening for WS-Management requests. %n%n User Action %n Use the following command to see the specific IPs on which WinRM is listening: %n%n winrm enumerate winrm/config/listener"
            />
        <string
            id="event_LOG_WSMAN_SERVICE_STOPPED_LISTENING"
            value="The WinRM service is not listening for WS-Management requests. %n%n User Action %n If you did not intentionally stop the service, use the following command to see the WinRM configuration: %n%n winrm enumerate winrm/config/listener"
            />
        <string
            id="event_LOG_WSMAN_SERVICE_UNUSABLE_LISTENER"
            value="The WinRM service could not use the following listener to receive WS-Management requests.  The listener is enabled but the listener does not have an IP address configured. %n%n User Action %n Check the underlying network configuration to determine if this listener has at least one valid IP. If the IP is valid, ensure that WinRM configuration does not exclude that IP address by using the following command: %n%n winrm get winrm/config/service %n%n Additional Data %n Listener transport: %1 %n Listener address: %2"
            />
        <string
            id="event_LOG_WSMAN_SERVICE_ADDRESS_CHANGE_IGNORED"
            value="The WinRM service had a failure (%1) reading configuration during ip address change notification. %n%n Service will continue running with old configuration.%n%n User Action %n If immediae changes are required manually restart the service"
            />
        <string
            id="event_LOG_WSMAN_SERVICE_ADDRESS_CHANGE_SUCCESSFULL"
            value="The WinRM service successfully processed an address change notification."
            />
        <string
            id="event_LOG_WSMAN_PLUGIN_LOAD"
            value="The WinRM service loaded the following plugin: %1 (%2)"
            />
        <string
            id="event_LOG_WSMAN_PLUGIN_UNLOAD"
            value="The WinRM service unloaded the following plugin: %1 (%2)"
            />
        <string
            id="event_LOG_WSMAN_IIS_CONFIGURATION_READ_FAILED"
            value="The WSMan IIS module failed to read configuration. The error received was %1: %%%1 %n %2.%n%n User Action %n Make sure both the schema and validation files are present and valid."
            />
        <string
            id="event_LOG_WSMAN_PLUGIN_CONFIGURATION_READ_FAILED"
            value="The WSMan service failed to read configuration of the following plugin: %n %1. %n%nThe error received was %2: %%%2 %n %3.%n%n User Action %n Make sure this plugin configuration is valid."
            />
        <string
            id="Event.AUTORESTART_FAILED"
            value="The WSMan service failed to restart plugins marked for AutoRestart. The error code received was: %1"
            />
        <string
            id="Event.AUTORESTART_PLUGIN_FAILED"
            value="The WSMan service failed to restart the following plugin on service startup: %1. %nThe error code received was: %2"
            />
        <string
            id="Event.AUTORESTART_PLUGIN_DONE"
            value="The WSMan service successfully restarted the following plugin on service startup: %1"
            />
        <string
            id="event_LOG_WSMAN_SPN_CREATION"
            value="The WinRM service failed to create the following SPNs: %1; %2. %n%n Additional Data %n The error received was %3: %%%3.%n%n User Action %n The SPNs can be created by an administrator using setspn.exe utility."
            />
        <string
            id="event_LOG_WSMAN_CREDSSP_INIT_FAILED"
            value="The WinRM service failed to initialize CredSSP. %n%n Additional Data %n The error received was %1.%n%n User Action %n Configure CertificateThumbprint setting under the WinRM configuration for the service. Use the thumbprint of a valid certificate and make sure that Network Service has access to the private key of the certificate."
            />
        <string
            id="AnalyticChannel"
            value="Microsoft-Windows-WinRM/Analytic"
            />
        <string
            id="eventProviderName"
            value="Microsoft-Windows-Windows Remote Management"
            />
        <string
            id="Channel.Operational.Name"
            value="Microsoft-Windows-WinRM/Operational"
            />
        <!-- Events for Operational channel -->
        <string
            id="Task.ApiInitialize.Name"
            value="WSMan API Initialize"
            />
        <string
            id="Task.ApiDeinitialize.Name"
            value="WSMan API Deinitialize"
            />
        <string
            id="Task.SessionInitialize.Name"
            value="WSMan Session initialize"
            />
        <string
            id="Task.SessionDeinitialize.Name"
            value="WSMan Session deinitialize"
            />
        <string
            id="Task.ApiCall.Name"
            value="WSMan API call"
            />
        <string
            id="Task.Proxy.Name"
            value="Auto-detecting proxy settings"
            />
        <string
            id="Task.Authentication.Name"
            value="User authentication"
            />
        <string
            id="Task.Authorization.Name"
            value="User authorization"
            />
        <string
            id="Task.RequestHandling.Name"
            value="Request handling"
            />
        <string
            id="Task.ResponseHandling.Name"
            value="Response handling"
            />
        <string
            id="Task.ServiceMain.Name"
            value="Winrm service start/stop"
            />
        <string
            id="Task.Config.Name"
            value="Winrm configuration"
            />
        <string
            id="Task.Operation.Name"
            value="Winrm Operation"
            />
        <string
            id="Task.WinRM_Application.Name"
            value="WinRM MI Protocol Handler"
            />
        <string
            id="Task.WinRM_Session.Name"
            value="WinRM MI Session"
            />
        <string
            id="Task.WinRM_Operation.Name"
            value="WinRM MI Operation"
            />
        <string
            id="Keyword.SoapTrace.Name"
            value="Soap Trace"
            />
        <string
            id="Keyword.Client.Name"
            value="Client"
            />
        <string
            id="Keyword.Server.Name"
            value="Server"
            />
        <string
            id="Keyword.Security.Name"
            value="Security"
            />
        <string
            id="Keyword.QuotaViolation.Name"
            value="QuotaViolation"
            />
        <string
            id="Keyword.Transfer.Name"
            value="Activity Transfer"
            />
        <string
            id="Keyword.Error.Name"
            value="Error"
            />
        <string
            id="Event.CREATE_SESSION"
            value="Creating WSMan Session. The connection string is: %1"
            />
        <string
            id="Event.CREATE_SESSION_FAILED"
            value="WSMan Create Session operation failed, error code %1"
            />
        <string
            id="Event.CREATE_SESSION_COMPLETED_NO_ERROR"
            value="WSMan Create Session operation completed successfuly"
            />
        <string
            id="Event.INITIALIZE_API"
            value="Initializing WSMan API"
            />
        <string
            id="Event.INITIALIZE_API_FAILED"
            value="Initialization of WSMan API failed, error code %1"
            />
        <string
            id="Event.INITIALIZE_API_COMPLETED_NO_ERROR"
            value="Initialization of WSMan API completed successfuly"
            />
        <string
            id="Event.DEINITIALIZE_API"
            value="Deinitializing WSMan API"
            />
        <string
            id="Event.DEINITIALIZE_API_COMPLETED_NO_ERROR"
            value="Deinitialization of WSMan API completed successfuly"
            />
        <string
            id="Event.DEINITIALIZE_API_FAILED"
            value="Deinitialization of WSMan API failed, error code %1"
            />
        <string
            id="Event.CLOSE_SESSION"
            value="Closing WSMan Session"
            />
        <string
            id="Event.CLOSE_SESSION_COMPLETED_NO_ERROR"
            value="Closing WSMan Session completed successfuly"
            />
        <string
            id="Event.CLOSE_SESSION_FAILED"
            value="Closing WSMan Session failed, error code %1"
            />
        <string
            id="Event.SET_SESSION_OPTION_COMPLETED_NO_ERROR"
            value="Setting WSMan Session Option (%1) with value (%2) completed successfuly"
            />
        <string
            id="Event.SET_SESSION_OPTION_FAILED"
            value="Setting WSMan Session Option (%1) failed, error code %2"
            />
        <string
            id="Event.PROXY_DETECT"
            value="Auto-detecting proxy settings"
            />
        <string
            id="Event.PROXY_DETECT_DONE"
            value="Proxy AutoDetect done.%nProxy list: %1 %nBypass list: %2 "
            />
        <string
            id="Event.PROXY_SETTING"
            value="Setting proxy info %n Proxy list: %1 %n Bypass list: %2 "
            />
        <string
            id="Event.CREATING_SHELL"
            value="Creating WSMan shell with the ResourceUri: %1"
            />
        <string
            id="Event.CREATING_SHELL_FAILED"
            value="WSMan shell creation failed, error code %1"
            />
        <string
            id="Event.SENDING_REQUEST"
            value="Sending the request for operation %1 to destination machine and port %2:%3"
            />
        <string
            id="Event.RECEIVED_RESPONSE"
            value="Received the response from Network layer; status: %1"
            />
        <string
            id="Event.RECEIVED_RESPONSE_OK"
            value="Received the response from Network layer; status: 200 (HTTP_STATUS_OK)"
            />
        <string
            id="Event.RECEIVED_RESPONSE_UNH"
            value="Received the response from Network layer; status: %1"
            />
        <string
            id="Event.RECEIVED_REDIRECT"
            value="Received redirect status code from Network layer; status: 302 (HTTP_STATUS_REDIRECT); location: %1"
            />
        <string
            id="Event.NOTIFYING_CLIENT_OP_FAILED"
            value="WSMan operation %1 failed, error code %2"
            />
        <string
            id="Event.NOTIFYING_CLIENT_NO_ERROR"
            value="WSMan operation %1 completed successfully"
            />
        <string
            id="Event.RUNNING_COMMAND"
            value="Running WSMan command"
            />
        <string
            id="Event.RUNNING_COMMAND_FAILED"
            value="Running WSMan command failed, error code %1"
            />
        <string
            id="Event.CLOSING_COMMAND"
            value="Closing WSMan command"
            />
        <string
            id="Event.CLOSING_COMMAND_FAILED"
            value="Closing WSMan command failed, error code %1"
            />
        <string
            id="Event.CLOSING_SHELL"
            value="Closing WSMan shell"
            />
        <string
            id="Event.CLOSING_SHELL_FAILED"
            value="Closing WSMan shell failed, error code %1"
            />
        <string
            id="Event.SIGNAL_SHELL"
            value="Signaling WSMan shell"
            />
        <string
            id="Event.SIGNAL_COMMAND"
            value="Signaling WSMan command"
            />
        <string
            id="Event.SIGNAL_COMMAND_FAILED"
            value="Signaling WSMan command failed, error code %1"
            />
        <string
            id="Event.SIGNAL_SHELL_FAILED"
            value="Signaling WSMan shell, error code %1"
            />
        <string
            id="Event.CLOSING_OPERATION"
            value="Closing WSMan operation"
            />
        <string
            id="Event.CLOSING_OPERATION_COMPLETED_NO_ERROR"
            value="Closing WSMan %1 operation completed successfully"
            />
        <string
            id="Event.CLOSING_OPERATION_FAILED"
            value="Closing WSMan %1 operation failed, error code %2"
            />
        <string
            id="Event.SENDING_SHELL_INPUT"
            value="Sending input to the shell"
            />
        <string
            id="Event.SENDING_COMMAND_INPUT"
            value="Sending input to the command"
            />
        <string
            id="Event.SENDING_SHELL_INPUT_FAILED"
            value="Sending input operation failed, error code %1"
            />
        <string
            id="Event.RECEIVING_SHELL_OUTPUT"
            value="Calling into WSMan to receive output from the shell"
            />
        <string
            id="Event.RECEIVING_SHELL_OUTPUT_FAILED"
            value="WSMan receive operation failed, error code %1"
            />
        <string
            id="Event.RECEIVING_COMMAND_OUTPUT"
            value="Calling into WSMan to receive output from the command"
            />
        <string
            id="Event.GETTING_ERROR_MESSAGE_COMPLETED_NO_ERROR"
            value="Getting message for error code %1 completed successfully. The languageCode parameter was: %2"
            />
        <string
            id="Event.GETTING_ERROR_MESSAGE_FAILED"
            value="Getting message for error code %1 failed, the resulting error code is %2"
            />
        <string
            id="Event.GET_SESSION_OPTION"
            value="Getting WSMan Session Option (%1)"
            />
        <string
            id="Event.AUTH_MECHANISM"
            value="Authenticating the user using %1 mechanism"
            />
        <string
            id="Event.AUTH_FAILED_BAD_CREDS"
            value="Authenticating the user failed. The credentials didn&apos;t work."
            />
        <string
            id="Event.PROXY_AUTH_FAILED_BAD_CREDS"
            value="Authenticating the user with the proxy failed. The credentials didn&apos;t work."
            />
        <string
            id="Event.HTTP_SERVER_CERT_FAILURE"
            value="The server certificate on the destination computer (%1:%2) has the following errors: %3 %4 %5 %6 %7 %8 %9 %10. Fix the server certificate and try again."
            />
        <string
            id="Event.AUTH_NOT_SUPPORTED_BY_SERVER"
            value="The authentication mechanism (%1) requested by the client is not supported by the server.%nPossible authentication mechanisms reported by server: %2 %3 %4 %5 %6"
            />
        <string
            id="Event.ACCESS_DENIED_WITH_SUPPORTED_SERVER_AUTH_EXT"
            value="The destination computer (%1) returned an &apos;access denied&apos; error.%nPossible authentication mechanisms reported by server: %2 %3 %4 %5 %6.%nVerify your credentials are correct."
            />
        <string
            id="Event.ACCESS_DENIED_WITH_SUPPORTED_SERVER_AUTH"
            value="The destination computer (%1) returned an &apos;access denied&apos; error. Verify your credentials are correct."
            />
        <string
            id="Event.AUTH_NOT_SUPPORTED_BY_PROXY"
            value="The authentication mechanism requested by the proxy is not supported by the client. The only proxy authentication mechanism supported are Negotiate, Basic or Digest. %nPossible authentication mechanisms reported by proxy: %1 %2 %3 %4 %5"
            />
        <string
            id="Event.AUTH_CHOSEN_METHOD"
            value="The chosen authentication mechanism is %1"
            />
        <string
            id="Event.AUTOLOGONPOLICY_LOW"
            value="Network layer AutoLogon policy was set to Low as a result of a HTTP 401 response from Network layer"
            />
        <string
            id="Event.AUTOLOGONPOLICY_HIGH"
            value="Network layer AutoLogon policy was set to High"
            />
        <string
            id="Event.PROCESS_CLIENT_REQUEST"
            value="Processing client request for operation %1"
            />
        <string
            id="Event.SEND_RESPONSE_PACKET"
            value="Sending response for operation %1"
            />
        <string
            id="Event.RESEND_REQ_NEXT_PROXY_CANNOT_CONNECT"
            value="Re-sending the request as a result of ERROR_WINHTTP_CANNOT_CONNECT, using next proxy"
            />
        <string
            id="Event.RESEND_REQ_NEXT_PROXY_DEST_UNREACH"
            value="Re-sending the request as a result of ERROR_WINHTTP_NAME_NOT_RESOLVED, using next proxy"
            />
        <string
            id="Event.NETWORK_TIMEDOUT"
            value="The client got a timeout from the network layer (ERROR_WINHTTP_TIMEOUT)"
            />
        <string
            id="Event.LOGIN_FAILURE"
            value="The client got a login failure from the network layer (ERROR_WINHTTP_LOGIN_FAILURE)"
            />
        <string
            id="Event.CREATE_HOST_FAILURE"
            value="The WSMan service could not launch a host process to process the given request. Make sure the WSMan provider host server and proxy are properly registered. Error code %1"
            />
        <string
            id="Event.HOST_ABNORMAL_TERMINATION"
            value="The WSMan host process was unexpectedly terminated. Error code %1"
            />
        <string
            id="Event.HOST_CREATED_SUCCESS"
            value="The WSMan host process was started for user %1"
            />
        <string
            id="Event.HOST_TERMINATED_SUCCESS"
            value="The WSMan host process was terminated for user %1"
            />
        <string
            id="Event.SEND_HTTP_ERROR"
            value="Sending HTTP error back to the client due to a transport failure.%nThe HTTP status code is %1%nThe error code is %2"
            />
        <string
            id="Event.NAME_NOT_RESOLVED"
            value="Network layer returned ERROR_WINHTTP_NAME_NOT_RESOLVED - The server name cannot be resolved. Aborting the operation"
            />
        <string
            id="Event.SEND_RESPONSE_FAULT"
            value="Sending response error packet for ActionURI: %1"
            />
        <string
            id="Event.SEND_TIMEOUT_RESPONSE"
            value="Sending timeout response for operation: %1"
            />
        <string
            id="Event.SEMANTICCALLBACK_TIMEOUT_RESPONSE"
            value="An extended semantics callback timed out for operation: %1"
            />
        <string
            id="Event.ENUMERATION_EXPIRED"
            value="Enumeration is shutting down"
            />
        <string
            id="Event.SUBSCRIPTION_EXPIRED"
            value="Subscription is shutting down"
            />
        <string
            id="Event.PLUGIN_REPORT_CONTEXT"
            value="Plug-in reporting context for operation %1"
            />
        <string
            id="Event.PLUGIN_OBJECT_RESULT"
            value="Plug-in reporting data object for operation %1"
            />
        <string
            id="Event.PLUGIN_OBJECT_EPR_RESULT"
            value="Plug-in reporting data object and EPR for operation %1"
            />
        <string
            id="Event.PLUGIN_OBJECT_BOOKMARK_RESULT"
            value="Plug-in reporting data object and bookmark for operation %1"
            />
        <string
            id="Event.PLUGIN_RECEIVE_RESULT"
            value="Plug-in reporting data for operation Receive"
            />
        <string
            id="Event.PLUGIN_OPERATION_COMPLETE"
            value="Plug-in reporting operation complete for %1"
            />
        <string
            id="Event.PLUGIN_GET_OPERATION_PARAMETERS"
            value="Plug-in getting operational information for parameter %1 and operation %2"
            />
        <string
            id="Event.PLUGIN_REPORT_COMPLETION"
            value="Plug-in called WSManPluginReportCompletion with parameter %1 and obtained return value as %2"
            />
        <string
            id="Event.PLUGIN_GET_CONFIGURATION"
            value="Plug-in called WSManPluginGetConfiguration with parameter %1 and obtained return value as %2"
            />
        <string
            id="Event.PLUGIN_FORCED_SHUTDOWN"
            value="Plug-in: %1 is being forcibly shut down because its been idle for more than its configured HostIdleTimeoutSecs"
            />
        <string
            id="Event.PLUGIN_AUTHZ_USER_COMPLETE"
            value="Plug-in reporting the authorization for user %1 completed with error code %2"
            />
        <string
            id="Event.PLUGIN_AUTHZ_OPERATION_COMPLETE"
            value="Plug-in reporting the authorization operation completed with error %1 for operation %2 and ResourceUri %3"
            />
        <string
            id="Event.QUOTA_COMPLETE"
            value="Updating the quota for the user %1 with error code %2%n maxAllowedConcurrentShells=%3%n maxAllowedConcurrentOperations=%4%n timeslotSize=%5%n maxAllowedOperationsPerTimeslot=%6"
            />
        <string
            id="Event.AUTHORIZING_USER"
            value="Authorizing the user"
            />
        <string
            id="Event.AUTHORIZATION_DONE"
            value="The authorization of the user was done successfully"
            />
        <string
            id="Event.AUTHORIZATION_FAILED"
            value="The authorization of the user failed with error %1"
            />
        <string
            id="Event.SERVICE_STARTING"
            value="The Winrm service is starting"
            />
        <string
            id="Event.SERVICE_STARTED"
            value="The Winrm service started successfully"
            />
        <string
            id="Event.SERVICE_STOPPING"
            value="The Winrm service is stopping"
            />
        <string
            id="Event.SERVICE_STOPPED"
            value="The Winrm service was stopped successfully"
            />
        <string
            id="Event.QUICKCONFIG"
            value="%1"
            />
        <string
            id="Event.POLICY_CHANGE_NOTIFICATION_FAILURE"
            value="The WinRM %1 failed to register for group policy change notifications. %n%n Additional Data %n The error code is %2."
            />
        <string
            id="Event.ROBUST_CONNECTION_DISCONNECTED"
            value="The WinRM %1 is facing flaky network connection."
            />
        <string
            id="Event.ROBUST_CONNECTION_RETRYING"
            value="The WinRM Client is attempting to re-establish network connection."
            />
        <string
            id="Event.ROBUST_CONNECTION_NEW_CHANNEL_DETECTED"
            value="The WinRM Service detected a new network connection from the client."
            />
        <string
            id="Event.ROBUST_CONNECTION_RECONNECTED"
            value="The WinRM %1 successfully re-established the network connection."
            />
        <string
            id="Event.ROBUST_CONNECTION_GIVING_UP"
            value="The WinRM %1 failed to re-establish the network connection and is reporting failure."
            />
        <string
            id="Event.SERVICE_START_FAILED"
            value="The WinRM service is unable to start because of a failure during initialization. The error code is %1"
            />
        <string
            id="Event.SEND_401"
            value="Sending HTTP 401 response to the client and disconnect the connection after sending the response"
            />
        <string
            id="Event.AUTHENTICATION_DONE"
            value="User %1 authenticated successfully using %2 authentication"
            />
        <string
            id="Event.CERT_AUTHENTICATION_DONE"
            value="The authentication using client certificate with subject %1 done successfully"
            />
        <string
            id="Event.ENTERING_PLUGIN"
            value="Entering the plugin for operation %1 with a ResourceURI of &lt;%2&gt;"
            />
        <string
            id="Event.LEAVING_PLUGIN"
            value="Leaving the plugin for operation %1"
            />
        <string
            id="Event.SOAP_CLIENT_SENDING"
            value="SOAP [client sending index %1 of %2 total chunks (%3 bytes)] %4"
            />
        <string
            id="Event.SOAP_CLIENT_RECEIVING"
            value="SOAP [client receiving index %1 of %2 total chunks (%3 bytes)] %4"
            />
        <string
            id="Event.SOAP_LISTENER_SENDING"
            value="SOAP [listener sending index %1 of %2 total chunks (%3 bytes)] %4"
            />
        <string
            id="Event.SOAP_LISTENER_RECEIVING"
            value="SOAP [listener receiving index %1 of %2 total chunks (%3 bytes)] %4"
            />
        <string
            id="Event.QUOTA_MAX_SHELLS"
            value="The %1 user is allowed a maximum number of %2 concurrent shells, which has been exceeded.%nClose existing shells or raise the quota for this user."
            />
        <string
            id="Event.QUOTA_MAX_OPERATIONS"
            value="The %1 user is allowed a maximum number of %2 concurrent operations, which has been exceeded.%nClose existing operations for this user, or raise the quota for this user."
            />
        <string
            id="Event.QUOTA_USER"
            value="The user load quota of %1 requests per %2 seconds has been exceeded.%nSend future requests at a slower rate or raise the quota for the %3 user.%nThe next request from this user will not be approved for at least %4 milliseconds."
            />
        <string
            id="Event.QUOTA_SYSTEM"
            value="The system load quota of %1 requests per %2 seconds has been exceeded.%nSend future requests at a slower rate or raise the system quota.%nThe next request from the user %3 will not be approved for at least %4 milliseconds."
            />
        <string
            id="Event.QUOTA_MAXSHELLUSERS"
            value="The maximum number of users (%1) executing shell operations has been exceeded.%nRetry after sometime or raise the quota for concurrent shell users."
            />
        <string
            id="Event.TRANSFER_EVENT"
            value="Activity Transfer"
            />
        <string
            id="Event.ACCESS_DENIED_DIFF_SID"
            value="Access Denied error: the %1 API caller does not match the creator of the application object"
            />
        <string
            id="Event.SERVICE_STARTED_WITH_DEFAULT_CONFIG"
            value="The WSMan service could not load current configuration settings as the settings are corrupted. The service is started with default settings instead. %n%n User Action %n Use the following command to restore defaults: %n%n winrm invoke Restore winrm/config @{} "
            />
        <string
            id="Event.CLIENT_OPERATING_WITH_DEFAULT_CONFIG"
            value="The WSMan client could not load current configuration settings as the settings are corrupted. The client is operating with default settings instead. %n%n User Action %n Start the WinRM service and use the following command to restore defaults: %n%n winrm invoke Restore winrm/config @{} "
            />
        <string
            id="Event.REQUEST_CONTEXT_ERROR"
            value="An error was encountered while processing an operation.%nError Code: %1%nError String:%2"
            />
        <string
            id="Event.ERROR_CONTEXT_ERROR"
            value="An error was encountered while processing an operation.%nError Code: %1"
            />
        <string
            id="Event.EXTRA_DETAILS"
            value="Extra information.  Refer to the XML parameters for more details."
            />
        <string
            id="event_LOG_WSMAN_COMPATIBILITY_LISTENER_ENABLED"
            value="The WinRM service is listening on the default %1 port %2 and on %1 (Compatibility) port %3 for WS-Management requests. %1 port %3 is no longer the default port for the WinRM service.%n%n If you want to disable the listener on the (Compatibility) port %3, run the following command:%n%n Winrm set winrm/config/service @{%4=&quot;False&quot;}"
            />
        <string
            id="Event.MI_APPLICATION_INITIALIZE"
            value="The WinRM protocol handler began loading for application %1."
            />
        <string
            id="Event.MI_APPLICATION_CLOSE"
            value="The WinRM protocol handler completed unloading."
            />
        <string
            id="Event.MI_APPLICATION_ERROR"
            value="The WinRM protocol handler unloaded prematurely due to the following error: %2"
            />
        <string
            id="Event.MI_SESSION_NEW"
            value="The WinRM protocol handler began creating a session to the following destination: %1"
            />
        <string
            id="Event.MI_SESSION_CLOSE"
            value="The WinRM protocol handler closed the session."
            />
        <string
            id="Event.MI_SESSION_ERROR"
            value="The WinRM protocol session closed prematurely due to the following error: %2"
            />
        <string
            id="Event.MI_OPERATION_NEW"
            value="The WinRM protocol session began an operation of type %1 to the server. The operation accesses class %3 under the %2 namespace"
            />
        <string
            id="Event.MI_OPERATION_FINISH"
            value="The WinRM protocol session successfully completed the operation."
            />
        <string
            id="Event.MI_OPERATION_ERROR"
            value="The WinRM protocol operation failed due to the following error: %2"
            />
      </stringTable>
    </resources>
  </localization>
</assembly>
